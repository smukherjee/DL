في الفيديو السابق رأيتم مجموعة أمثلة عن أن تنفيذ الطريقة المتجهية باستخدام دوال مضمنة وتجنب حلقات التكرار الواضحة، يتيح لكم تسريع التعليمات البرمجية بشكل كبير. لذا، فلنلق نظرة
على المزيد من الأمثلة. قاعدة الإبهام التي علينا وضعها في اعتبارنا هي عندما تقومون ببرمجة شكات عصبية أو انحدار لوجستي كلما سنحت الفرصة، تجنبوا حلقات التكرار الواضحة. ومن غير المحتمل عدم استخدام حلقة تكرار واضحة أبدًا. لكن عندما يمكنكم استخدام دالة مضمنة أو العثور على طريقة أخرى لاحتساب ما تحتاجون فستجدون أنكم تتقدمون بسرعة عما إذا استخدمتم حلقة تكرار واضحة. دعونا نشرح مثالاً آخر. إذا أرتم يومًا احتساب المتجه U كناتج المصفوفة A والمتجه الآخر V إذن تعريف ضرب المصفوفة سيكون أن Ui تساوي j Aij vj∑. صحيح؟ هذه كيفية تعريف Ui. إذن التطبيق غير المتجهي لهذه المعادلة سيكون أن تكون U=np.zeros أي (n, 1). ثم لـ I وهكذا دواليك. لـ J وهكذا. صحيح؟ إذن U [i]+=A[i][j]*v[j]. إذن هاتان حلقتا تكرار على I وJ. هذه هي الطريقة غير المتجهية. التطبيق المتجهي لهذا سيكون U=NP.A,V. والتطبيق على اليمين للنسخة المتجهية يلغي الآن حلقتا تكرار مختلفتين وسيكون التقدم أسرع بكثير. دعونا نوضح مثالاً آخر. لنقل أن لديكم المتجه V في الذاكرة وتريدون تطبيق العملية الأسية على كل عنصر لنقل للمتجه V. إذن ستحسبون U تساوي المتجه E لـ V1 وE لـ V2 وهكذا نزولاً إلى E لـ Vn. إذن سيكون هذا التطبيق غير المتجهي حيث تقومون أولاً بتهيئة U إلى المتجه zeros ثم يكون لديكم حلقة تكرار تحسب كل عنصر في المرة. لكن يتضح أن في بايثون ونمباي العديد من الدوال المضمنة التي تتيح لكم حساب هذه المتجهات باستدعاء دالة واحدة فقط. ما سأقوم بفعله لتطبيق هذا هو استيراد نمباي كـ NP ثم تقوم باستدعاء U تساوي NP.E لـ V وهكذا تلاحظون مما سبق أن لديكم هنا حلقة تكرار واضحة مكونة من سطر واحد من التعليمة البرمجية حيث هنا V هي متجه الإدخال وU هي متجه الإخراج. لقد تخلصتم من حلقة التكرار الواضحة وسيكون تطبيق ما على اليمين أسرع بكثير مما على اليسار الذي يحتاج حلقة تكرار واضحة. في الحقيقة مكتبة نمباي تحتوي على الكثير من دوال القيمة للمتجهات. إذن ستقوم NP.log (v) باحتساب log العنصر. بينما ستحتسب NP.abs القيمة المطلقة. وستحتسب NP.maximum الحدود القصوى للعنصر. يمكنكم أخذ الحد الأقصى لكل عنصر من V مع 0 V**2 ونأخذ مربع كل عنصر من V، كما تعلمون. 1 فوق V تأخذ معكوس العنصر وهكذا. لذا عندما تشعرون بالحاجة لكتابة حلقة تكرار ألقوا نظرة جيدة وتأكدوا مما إذا كانت هناك طريقة لاستدعاء دالة نمباي مضمنة لتنفيذ ما تريدون دون الحاجة لحلقة تكرار. إذن لنأخذ كل هذه التعاليم ونحاول تنفيذ تطبيق الانحدار التدريجي للانحدار اللوجستي ونرى ما إذا كان بإمكاننا التخلص من حلقة تكرار واحدة من الحلقتين لدينا. هذه هي تعليمتنا البرمجية لمشتقات الانحدار اللوجستي. وكان لدينا حلقتا تكرار. واحدة كانت هذه بالأعلى والثانية كانت هذه، صحيح؟ في المثال لدينا N أو NX تساوي 2 ولكن إذا كان لدينا سمات أكثر من مجرد سمتين، فستحتاجون لحلقة تكرار فوق DW1 و DW2 وDW3 وهكذا. وكأن هناك بالفعل for J = 1 to nx ويتم تحديث DWJ، أليس كذلك؟ ونود إزالة حلقة التكرار الثانية هذه. وهذا ما سنفعله في هذه الشريحة. وطريقة فعل هذا هي أننا بدلاً من تهيئة DW1 وDW2 وما إلى ذلك إلى صفر بوضوح سنتخلص من هذا الجزء ونجعل DW متجهًا. سنقول أن DW=NP.zeros ولنقل أن ذلك ((NX,1)) أما هنا، فبدلاً من هذا أي حلقة تكرار فوق مكونات فردية سنستخدم معادلة قيمة هذا المتجه DW+=‎ X(i)DZ(i) وفي النهاية بدلاً من هذا، فسيكون لدينا dw/=m‎. إذن الآن انتقلنا من حلقتي تكرار إلى حلقة تكرار واحدة. ما تزال لدينا حلقة التكرار هذه فوق أمثلة التدريب الفردية. أتمنى أن يكون هذا الفيديو قد أعطاكم بعض المعلومات عن الطريقة المتجهية وبالتخلص من حلقة تكرار ستعمل تعليمتكم البرمجية بشكل أسرع. ولكن تبين أن بإمكاننا القيام بأفضل من ذلك. ولذلك في الفيديو القادم سنتكلم عن تطبيق الطريقة المتجهية على الانحدار اللوجستي أكثر من ذلك وستندهشون أنه دون استخدام أي حلقة تكرار دون الحاجة لحبقة تكرار فوق الأمثلة التدريبية فبإمكانكم كتابة تعليمة برمجية لمعالجة مجموعة التدريب كلها بمعنى كلها في وقت واحد. إذن، دعونا نرى تفاصيل ذلك في الفيديو التالي.