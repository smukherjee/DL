1
00:00:00,000 --> 00:00:02,070
З пройденим матеріалом ти вже практично

2
00:00:02,070 --> 00:00:04,745
готовий/а вирішити своє перше програмувальне завдання.

3
00:00:04,745 --> 00:00:10,130
Перед тим як це зробити, 
дозволь коротенько розказати про iPython записники в Coursera.

4
00:00:10,130 --> 00:00:14,545
Ось Jupiter/iPython записник, в який можна зайти на Coursera.

5
00:00:14,545 --> 00:00:17,520
Давай я швиденько покажу кілька його особливостей.

6
00:00:17,520 --> 00:00:21,885
Інструкції вказані просто тут - в iPython записнику.

7
00:00:21,885 --> 00:00:25,460
Оцей довгий світло-сірий блок - блок коду.

8
00:00:25,460 --> 00:00:27,030
Тож, іноді, ти бачитимеш в

9
00:00:27,030 --> 00:00:29,255
цих блоках щось подібне на це:

10
00:00:29,255 --> 00:00:31,860
### START CODE HERE ###, ### END CODE HERE ###.

11
00:00:31,860 --> 00:00:36,755
Щоб виконати програмувальну вправу, тобі потрібно писати код
 між "### START CODE HERE ###" і "### END CODE HERE ###".

12
00:00:36,755 --> 00:00:41,485
Наприклад, "print(Hello world)"

13
00:00:41,485 --> 00:00:44,085
А потім, щоб виконати код в блоці,

14
00:00:44,085 --> 00:00:49,355
ти можеш натиснути "Shift+Enter" і, 
таким чином, виконати цей код в блоці, в якому

15
00:00:49,355 --> 00:00:51,265
ми просто написали print("Hello world").

16
00:00:51,265 --> 00:00:53,355
Тож ця команда виведе "Hello world".

17
00:00:53,355 --> 00:00:55,140
Щоб запустити комірку на виконання

18
00:00:55,140 --> 00:00:56,940
(можна запустити на виконання один з блоків),

19
00:00:56,940 --> 00:01:01,200
клацни на Cell, потім на Run Cell. І цей код буде виконано.

20
00:01:01,200 --> 00:01:05,275
Можливо на твоєму комп'ютері

21
00:01:05,275 --> 00:01:07,364
комбінація клавіш для Cell/

22
00:01:07,364 --> 00:01:09,105
Run Cell відрізняється від Shift+Enter.

23
00:01:09,105 --> 00:01:14,070
Проте і для Mac, і для PC це - Shift+Enter.

24
00:01:14,070 --> 00:01:16,550
Тож, скоріш за все, у тебе також.

25
00:01:16,550 --> 00:01:18,480
Тепер, читаючи інструкції,

26
00:01:18,480 --> 00:01:20,960
якщо ти випадково натиснув/ла на них,

27
00:01:20,960 --> 00:01:24,270
то побачиш мову простої розмітки.

28
00:01:24,270 --> 00:01:26,700
Якщо ти потрапив в цей дивний текст,

29
00:01:26,700 --> 00:01:30,390
то, щоб перетворити його назад в звичайний, 
просто запусти комірку на виконання.

30
00:01:30,390 --> 00:01:34,740
Тож клацаєш по Cell/Run Cell або натискаєш Shift+Enter і

31
00:01:34,740 --> 00:01:39,630
ця дія виконає код простої розмітки і 
перетворить його назад в звичайний.

32
00:01:39,630 --> 00:01:41,565
І ще кілька підказок.

33
00:01:41,565 --> 00:01:43,795
Коли виконується ось такий код,

34
00:01:43,795 --> 00:01:48,333
він виконується на ядрі [kernel] -

35
00:01:48,333 --> 00:01:51,947
на шматку коду, який виконується на сервері.

36
00:01:51,947 --> 00:01:54,900
Якщо ти запустиш на виконання надмірно велике завдання, або

37
00:01:54,900 --> 00:01:59,121
залишиш комп'ютер на тривалий час, або щось піде не так

38
00:01:59,121 --> 00:02:00,505
(інтернет-зв'язок чи щось таке),

39
00:02:00,505 --> 00:02:03,160
то є незначний шанс, що ядро впаде.

40
00:02:03,160 --> 00:02:06,690
В такому випадку, клацни Kernel, а потім Restart ядра.

41
00:02:06,690 --> 00:02:10,415
Вірогідно це перезапустить ядро і змусить його знову працювати.

42
00:02:10,415 --> 00:02:13,080
Це не повинно трапитись, якщо ти запускаєш

43
00:02:13,080 --> 00:02:16,858
відносно невеликі завдання або просто запускаєш iPython записник.

44
00:02:16,858 --> 00:02:19,995
Якщо бачиш повідомлення про помилку, що ядро впало чи щось подібне,

45
00:02:19,995 --> 00:02:21,310
то можеш спробувати

46
00:02:21,310 --> 00:02:25,362
перезапустити ядро. І, нарешті, в iPython записнику

47
00:02:25,362 --> 00:02:27,845
(як тут) може бути багато блоків коду.

48
00:02:27,845 --> 00:02:33,255
Тож, навіть якщо попередній блок нічого не створював,

49
00:02:33,255 --> 00:02:35,550
запусти це блок на виконання, бо

50
00:02:35,550 --> 00:02:39,698
(в цьому випадку) він імпортує NumPy як np і т.п.

51
00:02:39,698 --> 00:02:42,360
І оголошує деякі змінні, які можуть знадобитись для

52
00:02:42,360 --> 00:02:45,570
запуску блоків з кодом, що розташовані нижче.

53
00:02:45,570 --> 00:02:50,845
Тож, запускай верхні блоки, 
навіть якщо не було завдання дописувати в них код.

54
00:02:50,845 --> 00:02:53,705
І, нарешті, коли знайдеш розв'язки,

55
00:02:53,705 --> 00:02:57,920
тут є блакитна кнопка "Відправити завдання" 
[Submit Assignment] вгорі справа.

56
00:02:57,920 --> 00:03:02,130
Натискай її, щоб відправити свої розв'язки для оцінки.

57
00:03:02,130 --> 00:03:05,520
Я помітив, що інтерактивна природа командної строки

58
00:03:05,520 --> 00:03:09,008
в iPython записнику - дуже корисна і її дуже легко вивчити.

59
00:03:09,008 --> 00:03:10,520
Навіть для кількох рядків коду

60
00:03:10,520 --> 00:03:13,450
можна побачити результат, дослідити їх і відредагувати дуже швидко.

61
00:03:13,450 --> 00:03:17,430
Тож я надіюсь, що стосовно вправ на Coursera,

62
00:03:17,430 --> 00:03:20,775
Jupiter iPython допоможе тобі швидко вчитись,

63
00:03:20,775 --> 00:03:24,535
експериментувати і бачити як реалізуються алгоритми.

64
00:03:24,535 --> 00:03:26,325
Є ще одне відео після цього.

65
00:03:26,325 --> 00:03:28,695
Це необов'язкове відео. В ньому розповідається про

66
00:03:28,695 --> 00:03:32,210
функцію Витрат для логістичної регресії. 
Можеш його як дивитись, так і не дивитись.

67
00:03:32,210 --> 00:03:33,745
Будь-який вибір - підходить.

68
00:03:33,745 --> 00:03:38,140
Щоб ти не обрав/ла, хай щастить з програмувальним завданням!

69
00:03:38,140 --> 00:03:42,720
І також я з нетерпінням чекаю тебе на початку 3-ого тижня.