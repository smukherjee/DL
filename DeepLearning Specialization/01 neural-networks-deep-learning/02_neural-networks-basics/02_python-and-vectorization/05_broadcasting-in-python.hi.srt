1
00:00:00,210 --> 00:00:03,240
पिछले वीडिओ में, मैनें बताया कि ब्राडकास्टिंग

2
00:00:03,240 --> 00:00:07,040
एक और तकनीक है जिसे आप उपयोग कर सकते है
 अपना पाइथन कोड तेज़ी से चलाने के लिए.

3
00:00:07,040 --> 00:00:11,860
इस वीडियो में, चलो गहराई में जाते है कि
 कैसे पाइथन में ब्राडकास्टिंग असल में काम करती है.

4
00:00:11,860 --> 00:00:14,240
चलो प्रोत्साहित करते हैं ब्राडकास्टिंग को एक उदाहरण के साथ.

5
00:00:14,240 --> 00:00:18,730
इस मैट्रिक्स में, मैंने दिखाया है संख्या कैलोरीज़ की कार्बोहाइड्रेट्स से,

6
00:00:18,730 --> 00:00:22,320
प्रोटींस और वसा चार भिन्न खाद्य पदार्थों के 100 ग्राम में.

7
00:00:22,320 --> 00:00:25,380
तो उदाहरण के लिए, सेब का एक 100 ग्राम पता चलता है,

8
00:00:25,380 --> 00:00:29,690
रखता है 56 कैलोरीज़ कार्ब्स से और बहुत कम प्रोटींस और वसा से.

9
00:00:29,690 --> 00:00:35,110
जबकि, इसके विपरीत, एक 100 ग्राम बीफ़ रखता है 
104 कैलोरीज प्रोटीन से और

10
00:00:35,110 --> 00:00:37,620
135 कैलोरीज वसा से.

11
00:00:37,620 --> 00:00:43,330
अब, चलो कहते है कि आपका लक्ष्य है गणना करना 
कैलोरीज़ के प्रतिशत की

12
00:00:43,330 --> 00:00:48,440
कार्ब्स, प्रोटींस और वसा से चार खाद्य पदार्थों में से प्रत्येक के लिए.

13
00:00:48,440 --> 00:00:52,338
तो, उदहारण के लिए, यदि आप इस कॉलम को देखें और

14
00:00:52,338 --> 00:00:57,697
उस कॉलम में संख्याओं को जोड़ें, 
आप पातें हैं कि सेब का 100 ग्राम

15
00:00:57,697 --> 00:01:02,580
रखता है 56 प्लस 1.2 प्लस 1.8 ताकि यह 59 कैलोरीज है.

16
00:01:02,580 --> 00:01:06,806
और इसलिए एक प्रतिशत के रूप में, प्रतिशत

17
00:01:06,806 --> 00:01:11,800
कैलोरीज कार्बोहाइड्रेट्स से एक सेब में होगा

18
00:01:11,800 --> 00:01:16,932
56 विभाजित 59 के, यह है लगभग 94.9%.

19
00:01:16,932 --> 00:01:22,399
इसलिए अधिकतर कैलोरीज सेब में आती हैं कार्ब्स से,
 जबकि इसके विपरीत,

20
00:01:22,399 --> 00:01:27,630
अधिकतर कैलोरीज बीफ की आती हैं प्रोटीन और वसा से और
 ऐसों से.

21
00:01:27,630 --> 00:01:33,630
इसलिए जो गणना आप चाहते हो असल में है 
जोड़ना प्रत्येक को चार कॉलमोंं में से

22
00:01:33,630 --> 00:01:38,740
इस मैट्रिक्स के पाने के लिए कुल संख्या
 कैलोरीज़ की 100 ग्राम में सेब के,

23
00:01:38,740 --> 00:01:40,920
माँस, अंडे और आलुओं के.

24
00:01:40,920 --> 00:01:45,090
और फिर विभाजित करना मैट्रिक्स भर में,

25
00:01:47,230 --> 00:01:51,230
ताकि प्राप्त करें प्रतिशत 
 कैलोरीज का कार्ब्स से, प्रोटीन्स और

26
00:01:51,230 --> 00:01:54,870
वसा चार खाद्य पदार्थो में से प्रत्येक के लिए.

27
00:01:54,870 --> 00:02:01,370
तो सवाल यह है कि, क्या आप कर सकते हो
 यह बिना एक सीधे सीधे फॉर लूप के?

28
00:02:01,370 --> 00:02:03,290
चलों देखतें हैं कि आप कैसें कर सकतें थे वह.

29
00:02:04,450 --> 00:02:08,602
जो मैं करने जा रहा हूँ है आपको दिखाना कि
 कैसे आप सेट कर सकते हो,

30
00:02:08,602 --> 00:02:12,990
यह मैट्रिक्स बराबर तीन बाय चार मैट्रिक्स A के.

31
00:02:12,990 --> 00:02:18,300
और फिर एक लाइन को पाइथन कोड के साथ
हम जोड़ने जा रहे हैं कालमों को नीचे तक.

32
00:02:18,300 --> 00:02:22,078
तो हमें मिलने वाली हैं चार संख्याएं कुल संख्या के लिए

33
00:02:22,078 --> 00:02:25,046
कैलोरीज़ की इन चार अलग अलग प्रकार के खाद्य पदार्थों में,

34
00:02:25,046 --> 00:02:28,095
100 ग्राम इन चार अलग अलग प्रकार के खाद्य पदार्थों का.

35
00:02:28,095 --> 00:02:32,113
और मैं करने जा रहा हूँ एक दूसरी लाइन 
 पाइथन कोड का विभाजित करने के लिए प्रत्येक को

36
00:02:32,113 --> 00:02:35,390
चार कलमों में से उनके तत्स्थानी जोड़ से.

37
00:02:35,390 --> 00:02:37,250
यदि वह मौखिक वर्णन बहुत स्पष्ट नहीं था,

38
00:02:37,250 --> 00:02:40,670
आशा है कि यह और स्पष्ट ही जायेगा एक सेकंड में 
 जब हम पाइथन कोड में देखेंगे.

39
00:02:40,670 --> 00:02:42,460
तो यहाँ हम जुपिटर नोटबुक में हैं.

40
00:02:42,460 --> 00:02:46,150
मैं पहले ही लिख चुका हूँ पहला 
 भाग कोड का पहले से ही भरने के लिए

41
00:02:46,150 --> 00:02:49,860
मैट्रिक्स ए उनसे जो संख्याएं हमारे पास थीं 
अभी अभी, तो हम हिट करेंगे शिफ्ट एंटर और

42
00:02:49,860 --> 00:02:51,220
बस रन कर दो उसे, तो वह रही मैट्रिक्स ए.

43
00:02:51,220 --> 00:02:55,080
और अब यहाँ है दो लाइन्स पाइथन कोड की.

44
00:02:55,080 --> 00:02:59,983
पहले, हम कंप्यूट करने जा रहें हैं 
 टाउ बराबर ए, वह जोड़.

45
00:02:59,983 --> 00:03:02,280
और एक्स बराबर है ज़ीरो के मतलब जोड़ना है लम्ब रूप से.

46
00:03:02,280 --> 00:03:05,280
हम उसके बारे में और बात करेंगे थोड़ी देर में.

47
00:03:05,280 --> 00:03:06,076
और फिर प्रिंट कर दो कैल.

48
00:03:06,076 --> 00:03:07,825
तो हम जोड़ेंगे लम्ब रूप से.

49
00:03:07,825 --> 00:03:13,735
अब 59 है कुल संख्या कैलोरीज़ की सेब में, 239 थी

50
00:03:13,735 --> 00:03:19,575
कुल संख्या कैलोरीज़ की माँस में
और अण्डों में और आलुओं में और इसी तरह.

51
00:03:19,575 --> 00:03:25,151
और फिर परसेंटेज कंप्यूट करेंगे

52
00:03:25,151 --> 00:03:30,733
बराबर A/cal.reshape 1,4.

53
00:03:30,733 --> 00:03:33,927
असल में हम प्रतिशत चाहते हैं तो यहाँ 100 से गुणा कर दें.

54
00:03:35,913 --> 00:03:38,860
और तब चलों प्रतिशत प्रिंट करते हैं.

55
00:03:40,800 --> 00:03:41,950
चलों उसे रन करते हैं.

56
00:03:41,950 --> 00:03:46,870
और इसलिए वह कमांड हमने ली है मेट्रिक्स A और

57
00:03:46,870 --> 00:03:50,820
विभाजित किया है इसे इस एक बाई चार मेट्रिक्स से.

58
00:03:50,820 --> 00:03:52,672
तो यह देती है हमें प्रतिशत की मेट्रिक्स.

59
00:03:52,672 --> 00:03:57,327
तो हमने हाथ से किया था अभी ऊपर यहाँ

60
00:03:57,327 --> 00:04:02,480
था एक कॉलम 94.9% कैलरीज़ हैं कार्ब से.

61
00:04:02,480 --> 00:04:04,000
चलिए वापस स्लाइड्स पर चलते हैं.

62
00:04:04,000 --> 00:04:06,310
तो बस दो पंक्तियों को दोहराने के लिए 
कोड की जो हमारे पास था,

63
00:04:06,310 --> 00:04:09,940
तो यह है जो हमने लिखा था जुपिटर नोटबुक में.

64
00:04:09,940 --> 00:04:13,306
थोड़ा सा और विवरण जोड़ने के लिए यह पेरामिटर,

65
00:04:13,306 --> 00:04:18,540
(axis=0) का मतलब है कि आप चाहते है 
पाइथान खड़ा / लम्बवत योग करे.

66
00:04:18,540 --> 00:04:21,567
तो यदि x बराबर है ज़ीरो के मतलब जोड़ना है लम्ब रूप से.

67
00:04:21,567 --> 00:04:24,029
जबकि हॉरिज़ॉंटल ऐक्सिस है ऐक्सिस 1.

68
00:04:24,029 --> 00:04:28,050
ताकि लिख सके ऐक्सिस 1 या योग करना 
क्षैतिज रूप से बजाय लंब रूप से.

69
00:04:28,050 --> 00:04:30,670
और फिर यह कमांड यहाँ,

70
00:04:30,670 --> 00:04:35,210
यह है एक उदाहरण पाइथान ब्रॉडकास्टिंग 
का जहाँ आप लेते हैं एक मेट्रिक्स A.

71
00:04:35,210 --> 00:04:43,330
तो यह है एक तीन बाई चार मेट्रिक्स और आप 
विभाजित करते हैं इसे एक बाई चार मेट्रिक्स से.

72
00:04:43,330 --> 00:04:47,370
और तकनीकी तौर पर, कोड इस पहली पंक्ति के 
बाद, cal, वेरिएबल cal,

73
00:04:47,370 --> 00:04:49,590
है पहले से ही एक बाई चार मैट्रिक्स.

74
00:04:49,590 --> 00:04:52,616
तो तकनीकी रूप से आपको कॉल करने की 
ज़रूरत नहीं पड़ती reshape को यहाँ दोबारा,

75
00:04:52,616 --> 00:04:54,722
तो वह वास्तव में थोड़ा व्यर्थ है.

76
00:04:54,722 --> 00:04:59,140
लेकिन जब मैं लिख रहा हूँ पाइथान कोड्स 
यदि मुझे पूरी तरह यक़ीन नहीं है क्या मेट्रिक्स,

77
00:04:59,140 --> 00:05:04,056
क्या हैं डिमेन्शंज़ मेट्रिक्स की, मैं अक्सर कॉल करता हूँ 
reshape कमांड सिर्फ़

78
00:05:04,056 --> 00:05:07,833
सुनिश्चित करने के लिए कि यह 
सही कॉलम वेक्टर या रो वेक्टर है या

79
00:05:07,833 --> 00:05:09,500
जो भी आप चाहते हैं इसे होना.

80
00:05:09,500 --> 00:05:11,840
reshape कमांड है एक कॉन्स्टंट टाइम.

81
00:05:11,840 --> 00:05:15,150
यह है एक ऑर्डर वन का ऑपरेशन और 
वह बहुत सुलभ है कॉल करना.

82
00:05:15,150 --> 00:05:18,404
तो संकोच न करें इस्तेमाल करने में reshape 
कमांड सुनिश्चित करने के लिए कि आपकी मेट्रिसीज़

83
00:05:18,404 --> 00:05:20,830
उस साइज़ की हैं जो आप चाहते हैं.

84
00:05:21,920 --> 00:05:27,272
चलो अब थोड़ा विस्तार से समझाता हूँ कि कैसे 
इस तरह का ऑपरेशन काम करता है, ठीक है?

85
00:05:27,272 --> 00:05:33,780
तो यह है एक तीन बाई चार मेट्रिक्स और हमने 
विभाजित किया है इसे एक बाई चार मेट्रिक्स से.

86
00:05:33,780 --> 00:05:37,840
तो आप कैसे विभाजित करते हैं एक 
तीन बाई चार मेट्रिक्स को एक बाई चार मेट्रिक्स से?

87
00:05:37,840 --> 00:05:38,860
या एक बाई चार वेक्टर से?

88
00:05:40,130 --> 00:05:43,160
चलो देखते हैं कुछ और उदाहरण ब्रॉडकास्टिंग के.

89
00:05:43,160 --> 00:05:47,920
यदि आप लेते हैं एक 4 बाई 1 वेक्टर और 
जोड़ते हैं इसे एक नम्बर में, क्या

90
00:05:47,920 --> 00:05:53,011
पाइथान करेगा कि लेगा यह नम्बर और 
ऑटो-इक्स्पैंड करेगा

91
00:05:53,011 --> 00:05:58,180
इसे एक चार बाई एक वेक्टर निम्नलिखित रूप से.

92
00:05:58,180 --> 00:06:00,257
और इसलिए वेक्टर [1,2,3,

93
00:06:00,257 --> 00:06:04,450
4] जमा नम्बर 100 बन जाता है वह वेक्टर दाईं तरफ़.

94
00:06:04,450 --> 00:06:09,280
तो आप जोड़ रहे हैं 100 प्रत्येक एलिमेंट को, 
और वास्तव में हम इस्तेमाल करते हैं यह फ़ॉर्म

95
00:06:09,280 --> 00:06:14,365
ब्रॉडकास्टिंग की जहाँ वह कॉन्स्टंट था 
पेरमिटर b पिछले एक वीडियो में.

96
00:06:14,365 --> 00:06:19,414
और इस तरह की ब्रॉडकास्टिंग काम करती है 
दोनो कॉलम वेक्टर और रो वेक्टर के साथ,

97
00:06:19,414 --> 00:06:24,157
और वास्तव में हम इस्तेमाल करते हैं 
एक समान फ़ॉर्म ब्रॉडकास्टिंग की पहले कॉन्स्टंट के साथ

98
00:06:24,157 --> 00:06:29,330
हम जोड़ रहे है एक वेक्टर में पेरामिटर b लॉजिस्टिक रेग्रेशन में.

99
00:06:29,330 --> 00:06:31,610
इधर एक और उदाहरण.

100
00:06:31,610 --> 00:06:35,900
मान लो आपके पास है एक दो बाई तीन मेट्रिक्स और

101
00:06:35,900 --> 00:06:39,420
तो आप जोड़ते हैं इसमें यह 1 बाई n मेट्रिक्स.

102
00:06:40,950 --> 00:06:45,682
तो सामान्य रूप होगा यदि आपके

103
00:06:45,682 --> 00:06:50,583
पास है कोई (m,n) मेट्रिक्स यहाँ और

104
00:06:50,583 --> 00:06:55,330
आप जोड़ते हैं इसमें एक (1,n) मेट्रिक्स.

105
00:06:55,330 --> 00:06:58,667
पाइथान क्या करेगा कि कॉपी करेगा मेट्रिक्स m

106
00:06:58,667 --> 00:07:03,672
बार बदलने के लिए इसे m बाई n मेट्रिक्स में, 
तो बजाय इस 1 बाई

107
00:07:03,672 --> 00:07:09,980
3 मेट्रिक्स के, यह कॉपी करेगा इसे दो बार
 इस उदाहरण में बदलने के लिए इसे इसमें.

108
00:07:09,980 --> 00:07:14,092
तथा, 2 बाई 3 मेट्रिक्स और हम जोड़ेंगे इन्हें तो

109
00:07:14,092 --> 00:07:18,270
आपको मिलेगा योग दाईं तरफ़, ठीक है?

110
00:07:18,270 --> 00:07:21,583
तो आपने लिया, आपने जोड़ा 100 पहले कॉलम में,

111
00:07:21,583 --> 00:07:25,812
जोड़ा 200 दूसरे कॉलम में, जोड़ा 300 तीसरे कॉलम में.

112
00:07:25,812 --> 00:07:28,796
और यह है मूलरूप से जो हमने किया पिछली स्लाइड में,

113
00:07:28,796 --> 00:07:32,810
सिवाय कि हमने इस्तेमाल किया division ऑपरेशन 
बजाय इस्तेमाल करने के एक addition ऑपरेशन.

114
00:07:34,180 --> 00:07:40,402
तो एक आख़िरी उदाहरण,
 यदि आपके पास है एक (m,n) मेट्रिक्स और

115
00:07:40,402 --> 00:07:46,260
आप जोड़ते हैं इसे एक (m,1) वेक्टर, (m,1) मेट्रिक्स में.

116
00:07:47,310 --> 00:07:50,760
तब सिर्फ़ यह कॉपी होगा n बार क्षैतिज रूप से.

117
00:07:50,760 --> 00:07:53,510
तो आपको मिलेगी एक (m,n) मेट्रिक्स.

118
00:07:53,510 --> 00:07:56,990
तो जैसे कि आप कल्पना कर सकते हैं 
कॉपी करना इसे क्षैतिज रूप से तीन बार.

119
00:07:56,990 --> 00:07:58,650
और आप जोड़ते हैं उन्हें.

120
00:07:58,650 --> 00:08:01,070
तो जब आप जोड़ते हैं उन्हें आपको मिलेगा यह.

121
00:08:01,070 --> 00:08:06,890
तो हमने जोड़ा 100 पहली रो में, जोड़ा 200 दूसरी रो में.

122
00:08:08,270 --> 00:08:12,061
यह है अधिक सामान्य सिद्धांत ब्रॉड्कास्टिंग का पाइथान में.

123
00:08:12,061 --> 00:08:17,353
यदि आपके पास है एक (m,n) मेट्रिक्स और आप जोड़ते है या

124
00:08:17,353 --> 00:08:24,409
घटाते हैं या गुणा या विभाजित करते हैं 
इसे एक (1,n) मेट्रिक्स से,

125
00:08:24,409 --> 00:08:31,177
तब यह कॉपी करेगा इसे m बार एक (m,n) मेट्रिक्स में.

126
00:08:31,177 --> 00:08:33,781
और फिर अप्लाई करेगा जोड़, घटा, और

127
00:08:33,781 --> 00:08:36,140
गुणा या विभाजन प्रत्येक एलिमेंट पर.

128
00:08:37,250 --> 00:08:42,250
यदि इसके विपरीत, आपने ली होती एक (m,n) 
मेट्रिक्स और जोड़ना, घटाना, गुणा,

129
00:08:42,250 --> 00:08:49,060
विभाजन करना होता एक (m,1) मेट्रिक्स से, 
तब भी यह कॉपी करेगा इसे अब n बार.

130
00:08:49,060 --> 00:08:54,740
और बदलेगा इसे एक (m,n) मेट्रिक्स में और फिर
 अप्लाई करेगा ऑपरेशन प्रत्येक एलिमेंट पर.

131
00:08:54,740 --> 00:09:00,327
सिर्फ़ एक और फ़ॉर्म ब्रॉडकास्टिंग का,
 जो है यदि आपके पास है एक (m,1) मेट्रिक्स,

132
00:09:00,327 --> 00:09:05,175
तो वह वास्तव में है एक कॉलम वेक्टर जैसे [1,2,3], 
और आप जोड़ते हैं,

133
00:09:05,175 --> 00:09:08,482
घटाते है, गुणा या विभाजन करते हैं एक रियल नम्बर से.

134
00:09:08,482 --> 00:09:11,080
तो शायद एक (1, 1) मैट्रिक्स.

135
00:09:11,080 --> 00:09:16,117
तो जैसे वह जमा 100, तब आप कॉपी करेंगे

136
00:09:16,117 --> 00:09:23,512
यह रियल नम्बर n बार जब तक आपको नहीं 
मिलती एक और (n,1) मेट्रिक्स.

137
00:09:23,512 --> 00:09:29,700
और फिर आप करते हैं ऑपरेशन जैसे जोड़ 
इस उदाहरण में प्रत्येक एलिमेंट पर.

138
00:09:29,700 --> 00:09:35,823
और कुछ इसी प्रकार का काम करता है रो वेक्टर्ज़ के लिए.

139
00:09:38,281 --> 00:09:43,730
पूर्ण सामान्य वर्ज़न ब्रॉडकास्टिंग का 
कर सकता है थोड़ा इससे ज़्यादा भी.

140
00:09:43,730 --> 00:09:49,080
यदि आप रुचि रखते है आप प्रलेखन पढ़ सकते है

141
00:09:49,080 --> 00:09:52,240
numpy के लिए और देख सकते हैं 
ब्रॉडकास्टिंग उस प्रलेखन में.

142
00:09:52,240 --> 00:09:56,380
वह देता है थोड़ी और ज़्यादा सामान्य 
परिभाषा ब्रॉडकास्टिंग की.

143
00:09:56,380 --> 00:10:00,140
लेकिन जो स्लाइड पर हैं वे हैं मुख्य फ़ॉर्म्ज़ 
ब्रॉडकास्टिंग की जो आप को

144
00:10:00,140 --> 00:10:02,560
चाहिए इस्तेमाल करने के लिए जब आप
 इम्प्लमेंट करते हैं एक न्यूरल नेटवर्क.

145
00:10:03,890 --> 00:10:06,840
इससे पहले कि हम समाप्त करे, सिर्फ़ एक आख़िरी टिप्पणी, जो है

146
00:10:06,840 --> 00:10:10,210
आप में से उनके लिए जिनको आदत है प्रोग्रैमिंग की MATLAB या

147
00:10:10,210 --> 00:10:15,760
octave में, यदि आपने कभी इस्तेमाल किया है 
MATLAB या octave फ़ंक्शन bsxfun.

148
00:10:15,760 --> 00:10:20,590
न्यूरल नेटवर्क प्रोग्रामिंग में bsxfun कुछ इसी प्रकार 
का काम करता है, बिलकुल वैसा नहीं.

149
00:10:20,590 --> 00:10:25,750
लेकिन इसे अक्सर उसी उद्देश्य के लिए इस्तेमाल करते हैं
 जिसके लिए हम ब्रॉडकास्टिंग करते हैं पाइथान में.

150
00:10:25,750 --> 00:10:28,505
लेकिन यह वास्तव में सिर्फ़ बहुत उन्नत MATLAB और

151
00:10:28,505 --> 00:10:31,600
octave यूज़र्ज़ के लिए है, यदि आपने नहीं सुना है 
इसका, चिंता न करें इसकी.

152
00:10:31,600 --> 00:10:35,524
आपको नहीं जानने की आवश्यकता है इसकी जब 
आप कोड कर रहे हैं न्यूरल नेटवर्क्स पाइथान में.

153
00:10:35,524 --> 00:10:38,720
तो, वह था ब्रॉडकास्टिंग पाइथान में.

154
00:10:38,720 --> 00:10:42,360
मुझे आशा है कि जब आप प्रोग्रामिंग होमवर्क करेंगे 
वह ब्रॉडकास्टिंग आपको करने देगी

155
00:10:42,360 --> 00:10:44,580
न केवल आपका कोड जो तेज़ रन करेगा,

156
00:10:44,580 --> 00:10:48,920
लेकिन आपको सहायता भी करेगा जो आप 
करना चाहते है कुछ कोड्ज़ की लाइंज़ से.

157
00:10:50,360 --> 00:10:53,630
इससे पहले की आप प्रोग्रामिंग एक्सर्सायज़ में जाएँ, 
मैं साँझा करना चाहता हूँ आपके साथ सिर्फ़

158
00:10:53,630 --> 00:10:56,290
एक और सेट आइडिया का, जो है कि कुछ सुझाव है और

159
00:10:56,290 --> 00:11:00,700
ट्रिक्स है जो मैंने ढूँढी हैं कम करती हैं बग्ज़ की
 संख्या को मेरे पाइथान कोड में और

160
00:11:00,700 --> 00:11:02,640
जो मैं आशा करता हूँ आपको भी मदद करेंगे.

161
00:11:02,640 --> 00:11:05,550
तो इसी के साथ, चलो बात करते हैं उस बारे में अगले वीडियो में.