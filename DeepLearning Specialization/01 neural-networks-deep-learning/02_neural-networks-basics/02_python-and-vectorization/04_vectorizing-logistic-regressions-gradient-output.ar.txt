في الفيديو السابق رأيتم كيفية استخدام الطريقة المتجهية لحساب التنبؤات. حرف a الصغير لمجموعة بيانات
 التدريب الكاملة O في الوقت ذاته. في هذا الفيديو، سنرى كيفية
استخدام الطريقة المتجهية بغرض إجراء حسابات التدرج لجميع أمثلة التدريب M. وكما قلت سابقًا، كل ذلك في الوقت ذاته. وفي نهاية هذا الفيديو سنجمع كل ذلك معًا لرؤية كيف يمكننا اشتقاق تطبيق فعال للانحدار اللوجستي. إذن ربما تتذكرون أنه في حساب التدرج ما فعلناه هو أننا قمنا بحساب dz1 في المثال الأول والتي قد تكون a(1)-y(1) ثم dz2 تساوي a(2)-y(2) وهكذا. والمثل في جميع أمثلة التدريب M. لذا ما سنفعله هو تحديد متغير جديد dZ سيصبح dz1 وdz2 وdzm. مجددًا، جميع متغيرات حرف D
الصغير وz مكدسة بشكل أفقي. لذا ستكون هذه 1‏‏‏ x المصفوفة m أو
بدلًا من ذلك متجه الصف a m البعدي. إذا نتذكر من الشريحة السابقة أننا تعلمنا بالفعل كيفية حساب
حرف A الكبير فكان: a(1) حتى am وكان علينا حساب حرف Y
الكبير من y1 حتى ym. وكما تعرفون، تم تكديسها أفقيًا. لذا، وبالاعتماد على هذه التعريفات أصبح بإمكانكم رؤية أنه يمكن حساب dz كـ A ناقص Y، لأنها ستكون مساوية لـ a1 ناقص y1. لذا فالعنصر الأول هو a2 - y2 والأمر نفسه في العنصر الثاني وهكذا. إذًا فالعنصر الأول a1 - y1 هو
بالضبط تعريف dz1. العنصر الثاني هو تعريف dz2 بالضبط وهكذا. فبكتابة سطر واحد من التعليمة البرمجية يمكنك حساب جميع هذه المعادلات في الوقت ذاته. والآن، في التطبيق السابق تخلصنا من حلقة تكرار كاملة لكن ما زال لدينا حلقة كاملة ثانية لـ 20 مثالًا. لذا سنبدأ بتهيئة dw إلى صف
إلى متجه من الأصفار. ولكن ما يزال هناك حلقة تكرار
لـ20 مثالًا حيث يكون لدينا dw+= x¹ × dz¹ في مثال التدريب الأول، dw+= x²dz² وهكذا. لذا نضرب M ثم /‏dw=تساوي M
والأمر نفسه في B، أليس كذلك؟ تمت تهيئة db إلى صفر، وdb+=dz¹. db+=dz² كما تعرفون، إلى (dz(m و/‏db=تساوي M
وهذا ما فعلناه في التطبيق السابق. سبق وتخلصنا من حلقة كاملة واحدة. وبالتالي أصبح dw متجهًا، ثم قمنا بتحديث dw1 وdw2 بشكل منفصل وهكذا. تخلصنا من كل هذا بالفعل، لكن تبقى لدينا الحلقة الكاملة لأمثلة M في الأمثلة التدريبية. لذا هيا نأخذ هذه العمليات ونعالجها بمتجه واحد. إليكم ما يمكننا فعله مبدئيًا ما يفعله تطبيق متجه db هو القيام بجمع جميع متغيرات dz ثم تقسيمها على m، لذا db هو 1 على m مجموع I يساوي 1 إلى m من dzi وجميع متغيرات dz في متجه
الصف ذاك، وكذلك في بايثون ما نفعله هو تطبيق 1 على m مضروبة في np. مجموع z. لذا سنستخدم هذا المتغير ونطبق
عليه دالة مجموع .np وسيعطينا هذا db. ماذا عن dw، أو نكتب المعادلات الصحيحة التي من شأنها
التحقق من صحة ما فعلناه. يتضح أن DW هي 1 على M مضروبة في مصفوفة X مضروبة في dzᵀ. وهكذا نرى لم حدث ذلك. هذا يساوي 1 على m ثم المصفوفة x¹ وحتى xm مكدسة في أعمدة هكذا وdzᵀ ستكون dz1 إلى (dz(m هكذا. وبالتالي، إذا توصلتم إلى قيمة
هذه المصفوفة مضروبة في المتجه فستعرفون أن 1 على m مضروبة في x¹dz¹+…+xm dzm إذًا فهذا متجه n×1 وهذه
هي النتيجة التي نحصل عليها من dw، لأن dw كما تعلمون كانت تجمع xi dzi وهذا ما يفعله ضرب متجه المصفوفة، ولذا مجددًا بكتابة سطر واحد من التعليمة
البرمجية يمكننا حسب dw. لذا فتطبيق المعالجة بمتجه للحسابات المشتقة هو هذا. نستخدم هذا السطر لتطبيق db ونستخدم هذا السطر لتطبيق dw، ولاحظوا
أنه بوجود الحلقة الكاملة لأمثلة التدريب يمكننا الآن حساب التحديثات التي نريدها للمعلمات. والآن هيا نجمعها كلها ونرتبها
بطريقة تطبيق الانحدار اللوجستي. هذا هو تطبيقنا الأصلي وهو غير فعال بالمرة أو يعالج بمتجه واحد. أول ما فعلناه في الفيديو السابق هو التخلص
من هذا الجزء، أليس كذلك؟ فبدلًا من وجود حلقة لـ dw¹ وdw² وما إلى ذلك قمنا باستبدال هذا بقيمة المتجه dw وهي dw+= xi وهو الآن متجه مضروب في (dz(i. ولكن الآن، سنرى أن بإمكاننا أيضًا التخلص من هذه الحلقة الكاملة، وليس هذا الصف من الحلقة فقط. إليكم الطريقة. فباستخدام المعادلات من الشريحة السابقة يمكننا القول أن الحرف الكبير Z يساوي wᵀx+B والتعليمة البرمجية التي
عليكم كتابتها هي الحرف الكبير Z يساوي np.wᵀX+b ثم A تساوي سينية الحرف الكبير Z. انتهينا إذًا من حساب كل هذا، وهذا لأجل قيم I. والآن، في الشريحة السابقة قلنا أننا سنقوم بحساب dz= A-Y. وبهذا نكون قد قمنا بكل هذا من أجل قيم i. وأخيرًا، dw تساوي 1 على m مضروبة في dzᵀ وdb تساوي 1 على m من .np مضروبة في مجموع dz. وهكذا نكون قد حسبنا الانتشار
الأمامي والانتشار الخلفي بحساب التنبؤات وحساب الاشتقاق في جميع أمثلة التدريب M دون استخدام حلقة كاملة. وبالتالي سيكون تحديث خوارزمية
الانحدار التدريجي W وسيكون تحديثها إلى w ناقص
معدل التعلم مضروبًا في dw، والتي حسبناها في الأعلى، وB يتم تحديثها
لتكون B ناقص معدل التعلم مضروبًا في db. يمكن القول في بعض الأحيان أن
هذا أقرب إلى تمرين لكن أعتقد أنني لم أكن متسقًا في الإشارة إلى ذلك. لكن بهذا، قمنا للتو بتطبيق حساب ارتفاع الانحدار التدريجي للانحدار اللوجستي. حسنًا، أعرف أنني أشرت سابقًا
إلى أهمية التخلص من الحلقات الكاملة الواضحة كلما
سنحت الفرصة، لكن إذا أردتم تطبيق عدة أمثلة من الانحدار النسبي، فستحتاجون إذن إلى
حلقة كاملة لعدد من عمليات التكرار. لذا إذا أردتم ألف عملية تكرار للانحدار التدريجي فقد تحتاجون لحلقة كاملة لعدد عمليات التكرار. إذا كانت هناك حلقة كاملة خارجية فعندها لا أظن أن هناك طريقة
للتخلص من تلك الحلقة. لكنني أرى أنه من الرائع أننا نستطيع تطبيق تكرار واحد على الأقل للانحدار التدريجي
دون الحاجة لاستخدام حلقة كاملة. وبهذا يكون لدينا تطبيق متجه بشكل كبير وفعال للانحدار التدريجي للانحدار اللوجستي. هناك نقطة إضافية أريد التحدث
عنها في الفيديو القادم وهي تقنية أشرت إليها بإيجاز في
وصف الدورة بـ"التوزيع". والتوزيع هي تقنية موجودة في بايثون ونمباي تساعدكم على جعل أجزاء معينة
من تعليماتكم البرمجية أكثر فعالية. لذا، دعونا نتعرف على المزيد من التفاصيل
عن التوزيع في الفيديو القادم.