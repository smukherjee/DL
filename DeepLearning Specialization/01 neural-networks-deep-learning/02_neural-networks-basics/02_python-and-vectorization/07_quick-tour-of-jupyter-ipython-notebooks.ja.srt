1
00:00:00,000 --> 00:00:02,070
これまで学習したことを使って

2
00:00:02,070 --> 00:00:04,745
最初のプログラムアサインメントを
実施できる準備がほとんど整いました

3
00:00:04,745 --> 00:00:10,130
実施する前にCoursera の
IPython Notebook を紹介します

4
00:00:10,130 --> 00:00:14,545
これがCoursera で使用する
Jupyter IPython Notebook です

5
00:00:14,545 --> 00:00:17,520
これの機能を少し
簡単に紹介します

6
00:00:17,520 --> 00:00:21,885
このように指示はNotebook のテキスト部分に
書かれています

7
00:00:21,885 --> 00:00:25,460
このように薄い灰色の四角部分は
コードが書かれる箇所です

8
00:00:25,460 --> 00:00:27,030
このような

9
00:00:27,030 --> 00:00:29,255
START CODE HERE、END CODE HEREと
書かれたコードのブロックがあります

10
00:00:29,255 --> 00:00:31,860
演習を行うときはコードを

11
00:00:31,860 --> 00:00:36,755
START CODE HERE とEND CODE HERE との間に
書くようにしてください

12
00:00:36,755 --> 00:00:41,485
例えばprint("Hello world")と書いて

13
00:00:41,485 --> 00:00:44,085
コードを実行するときには

14
00:00:44,085 --> 00:00:49,355
shift+enter を押します
そうするとこの部分のコードが実行されます

15
00:00:49,355 --> 00:00:51,265
たった今書いた
Hello world のprintが

16
00:00:51,265 --> 00:00:53,355
実行されました

17
00:00:53,355 --> 00:00:55,140
この

18
00:00:55,140 --> 00:00:56,940
コードブロックのセルの実行には

19
00:00:56,940 --> 00:01:01,200
メニューからCell、Run Cells を
選んでも実行できます

20
00:01:01,200 --> 00:01:05,275
もしかすると
あなたのコンピューターでは

21
00:01:05,275 --> 00:01:07,364
セルの実行をする
キーボードのショートカットは

22
00:01:07,364 --> 00:01:09,105
shift+enterとは
異なるかもしれませんが

23
00:01:09,105 --> 00:01:14,070
私のMac もPC も
shift+enterです

24
00:01:14,070 --> 00:01:16,550
このため多分同じだと思います

25
00:01:16,550 --> 00:01:18,480
もし指示を読んでいるときに
間違ってダブルクリックをしてしまい

26
00:01:18,480 --> 00:01:20,960
ダブルクリックをしてしまいマークダウン言語表示になってしまったら
このおかしなテキストを
きちんとしたテキストに戻すにはセルを実行すればよいです

27
00:01:20,960 --> 00:01:24,270
マークダウン言語が実行され
元のきちんとしたテキストに戻ります

28
00:01:24,270 --> 00:01:26,700
他にも何点か紹介します

29
00:01:26,700 --> 00:01:30,390
きちんとしたテキストに戻すには
セルを実行すればよいです

30
00:01:30,390 --> 00:01:34,740
メニューでCell、Run Cells 選ぶか
shift+enter を押すと

31
00:01:34,740 --> 00:01:39,630
マークダウン言語が実行され
元のきちんとしたテキストに戻ります

32
00:01:39,630 --> 00:01:41,565
他にも何点か紹介します

33
00:01:41,565 --> 00:01:43,795
このようなコードを実行すると

34
00:01:43,795 --> 00:01:48,333
実際にはカーネルで実行されます

35
00:01:48,333 --> 00:01:51,947
その部分のコードがサーバーで実行されます
もし非常に長い時間のかかるジョブやコンピューターから長い時間離れる時や

36
00:01:51,947 --> 00:01:54,900
インターネット接続で何かが起こってバックエンドのカーネルが停止することがありえます
その場合Kernel、Restart を選ぶとカーネルが再起動され

37
00:01:54,900 --> 00:01:59,121
再度動く状態になると思います
小さなジョブを実行している時には起こるべきではないものです

38
00:01:59,121 --> 00:02:00,505
インターネット接続で何かが起こって

39
00:02:00,505 --> 00:02:03,160
バックエンドのカーネルが停止することがありえます

40
00:02:03,160 --> 00:02:06,690
その場合Kernel、Restart を選ぶと

41
00:02:06,690 --> 00:02:10,415
カーネルが再起動され
再度動く状態になると思います

42
00:02:10,415 --> 00:02:13,080
このIPython Notebook のように

43
00:02:13,080 --> 00:02:16,858
小さなジョブを実行している時や
IPython Notebook を起動した時には起こるべきではないものです

44
00:02:16,858 --> 00:02:19,995
このあたりにKernrl has diedのような
メッセージを見かけた時には

45
00:02:19,995 --> 00:02:21,310
メニューからKernel、Restart を試してください

46
00:02:21,310 --> 00:02:25,362
最後に このIPython Notebook のように

47
00:02:25,362 --> 00:02:27,845
何個ものコードのブロックがあるものあります

48
00:02:27,845 --> 00:02:33,255
もし先行するブロックのコードに
提出する部分がない場合でも

49
00:02:33,255 --> 00:02:35,550
必ず実行してください

50
00:02:35,550 --> 00:02:39,698
なぜならこの例なら
import numpy as np や

51
00:02:39,698 --> 00:02:42,360
後続のコードのブロック処理実行に

52
00:02:42,360 --> 00:02:45,570
必要な変数を設定したりします

53
00:02:45,570 --> 00:02:50,845
コードを書く指示がないブロックでも
必ず実行するようにしてください

54
00:02:50,845 --> 00:02:53,705
最後に解答を実装し終わったら

55
00:02:53,705 --> 00:02:57,920
右上の青色の「Submit Assignment」ボタンを
押してください

56
00:02:57,920 --> 00:03:02,130
こうすると演習の解答が
評価用に提出されます

57
00:03:02,130 --> 00:03:05,520
IPython Notebook の
インタラクティブ・コマンドシェルの性質は

58
00:03:05,520 --> 00:03:09,008
非常に役に立ちます
数行のコードを実装後

59
00:03:09,008 --> 00:03:10,520
すぐに実行し結果を見て

60
00:03:10,520 --> 00:03:13,450
迅速に学ぶことができます

61
00:03:13,450 --> 00:03:17,430
このCoursera のJupyter
IPython Notebook での演習から

62
00:03:17,430 --> 00:03:20,775
素早く学び実験して

63
00:03:20,775 --> 00:03:24,535
どのように機械学習用のアルゴリズムを実装するのかを
学ぶのに役立てばと思います

64
00:03:24,535 --> 00:03:26,325
３週目の最初のコースで

65
00:03:26,325 --> 00:03:28,695
このビデオの後に
任意で見ればよいビデオがあります

66
00:03:28,695 --> 00:03:32,210
これではロジステック回帰のコスト関数を説明します

67
00:03:32,210 --> 00:03:33,745
見ても見なくても
全く構いません

68
00:03:33,745 --> 00:03:38,140
どちらでも２週目のプログラム演習が
うまく行くように願っています

69
00:03:38,140 --> 00:03:42,720
３週目の最初のビデオで
また会えるのを楽しみにしています