1
00:00:00,000 --> 00:00:03,000
ニューラルネットワークの計算のされ方は
こう構成されていると聞きましたね

2
00:00:03,000 --> 00:00:07,253
ニューラルネットワークの出力へ向けての計算は

3
00:00:07,253 --> 00:00:10,005
前方パスか順誤差伝播法の先行する段階と

4
00:00:10,005 --> 00:00:13,310
勾配や微分を計算するような

5
00:00:13,310 --> 00:00:16,137
後方パスか誤差逆伝播法の後続する段階とで構成されます

6
00:00:16,137 --> 00:00:21,540
計算グラフによって
なぜこのように構成されているのかが説明できます

7
00:00:21,540 --> 00:00:24,375
このビデオでは
例を見ていきます

8
00:00:24,375 --> 00:00:28,060
計算グラフを説明するために

9
00:00:28,060 --> 00:00:34,260
ロジステック回帰や完璧なニューラルネットワークよりも
簡単な例を使いましょう

10
00:00:34,260 --> 00:00:37,200
関数J を計算しようとしているとしましょう

11
00:00:37,200 --> 00:00:39,510
３つの引数a、b、c を
持つ関数です

12
00:00:39,510 --> 00:00:44,900
仮に関数は3(a+bc)としましょう

13
00:00:44,900 --> 00:00:49,260
これを計算するには
３つの独自の段階があります

14
00:00:49,260 --> 00:00:51,799
まず最初にbc の値が
何かを計算し

15
00:00:51,799 --> 00:00:55,195
これを変数u に
保持するとします

16
00:00:55,195 --> 00:00:59,117
u = b * cです

17
00:00:59,117 --> 00:01:06,060
V=a+uです
最終的には

18
00:01:06,060 --> 00:01:09,380
出力Jは3Vです

19
00:01:09,380 --> 00:01:15,555
計算しようとしている最終的な関数Jは
こうなります

20
00:01:15,555 --> 00:01:20,970
この３段階を計算グラフでは
次のように描けます

21
00:01:20,970 --> 00:01:26,400
３つの変数a、b、c をここに書きます

22
00:01:26,400 --> 00:01:31,825
最初に計算するのはu=bc でした

23
00:01:31,825 --> 00:01:35,015
これを四角の中に入れます

24
00:01:35,015 --> 00:01:39,030
これへの入力はb とc です

25
00:01:39,030 --> 00:01:41,505
V=a+u があるでしょう

26
00:01:41,505 --> 00:01:47,440
これへの入力は

27
00:01:47,440 --> 00:01:56,645
計算したu と
一緒にa を入れます

28
00:01:56,645 --> 00:02:04,205
最終的にJ=3V が来ます

29
00:02:04,205 --> 00:02:07,235
具体的な例にするとa=5

30
00:02:07,235 --> 00:02:10,040
b=3、c=2 とします
u=bc は６です

31
00:02:10,040 --> 00:02:15,967
a+u は11になり
３倍にしてJ=33になります

32
00:02:15,967 --> 00:02:22,310
実際に検証できると思いますが

33
00:02:22,310 --> 00:02:29,520
この式は3(5+3x2)のようになり

34
00:02:29,520 --> 00:02:30,865
展開すると

35
00:02:30,865 --> 00:02:34,390
J の値として
33が実際に得られます

36
00:02:34,390 --> 00:02:38,060
独特な特別な出力値を
最適化したい場合には

37
00:02:38,060 --> 00:02:41,790
この場合はJですが

38
00:02:41,790 --> 00:02:43,940
計算グラフは

39
00:02:43,940 --> 00:02:46,215
便利なものになります

40
00:02:46,215 --> 00:02:48,755
例えばロジステック回帰の場合には

41
00:02:48,755 --> 00:02:53,260
J は最小化しようとするコスト関数です

42
00:02:53,260 --> 00:02:56,615
この少しの例で分かるのは

43
00:02:56,615 --> 00:02:58,666
左から右へのパスを通して

44
00:02:58,666 --> 00:03:01,075
J の値を計算できます

45
00:03:01,075 --> 00:03:05,993
このあとの数スライドでは
微分を計算するために

46
00:03:05,993 --> 00:03:10,010
右から左へのこんなパスがあり

47
00:03:10,010 --> 00:03:14,380
青の矢印に対して
逆の方向に進んでいます

48
00:03:14,380 --> 00:03:17,205
これは微分を計算するのに
最も自然な方法です

49
00:03:17,205 --> 00:03:20,015
まとめますと計算グラフは

50
00:03:20,015 --> 00:03:24,250
計算を左から右の
青色の矢印の方向に計算します

51
00:03:24,250 --> 00:03:26,510
次のビデオでは逆方向の赤矢印の

52
00:03:26,510 --> 00:03:31,710
右から左への微分計算を
どう行うのかを見ていきます

53
00:03:31,710 --> 00:03:33,000
次のビデオに進みましょう