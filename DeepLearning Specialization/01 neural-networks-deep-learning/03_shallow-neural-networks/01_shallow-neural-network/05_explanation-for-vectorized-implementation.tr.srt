1
00:00:00,000 --> 00:00:01,530
Bir önceki videoda 

2
00:00:01,530 --> 00:00:06,885
eğitim örneklerinin nasıl x matrisinde yatay olarak yığıldığını gördük,

3
00:00:06,885 --> 00:00:11,158
siz de sinir ağlarında yayılım için vektörize edilmiş uygulamalar türetebilirsiniz.

4
00:00:11,158 --> 00:00:14,760
hadi yazdığımız denklemlerin vektörize edilen örneklerin neden doğru uygulama 

5
00:00:14,760 --> 00:00:19,775
olduğunu biraz daha açıklayalım.

6
00:00:19,775 --> 00:00:25,590
Bunun için yayılım hesaplarını örneklerini biraz inceleyelim.

7
00:00:25,590 --> 00:00:27,645
İlk alıştırma örneğini

8
00:00:27,645 --> 00:00:29,130
x1 + b1 hesaplayarak,

9
00:00:29,130 --> 00:00:38,970
daha sonra ikinci eğitim örneğini

10
00:00:38,970 --> 00:00:49,310
x2 + b1 hesaplayarak,

11
00:00:49,310 --> 00:00:50,900
sonra da üçüncü eğitim örneğini

12
00:00:50,900 --> 00:00:56,064
x3 + b1 hesaplayarak elde edebiliriz.

13
00:00:56,064 --> 00:01:00,930
Bu slayttaki açıklamayı basitleştirmek için b'yi göz ardı edelim.

14
00:01:00,930 --> 00:01:08,395
Bu nedenle b'yi 0'a eşitleyelim.

15
00:01:08,395 --> 00:01:11,140
Zaten bizim oluşturduğumuz argüman

16
00:01:11,140 --> 00:01:14,320
b 0 değilken bile az miktarda değişir.

17
00:01:14,320 --> 00:01:17,610
Slayttaki açıklamayı biraz daha basitleştirsek.

18
00:01:17,610 --> 00:01:21,110
Şimdi w1 matris olacak değil mi?

19
00:01:21,110 --> 00:01:25,625
Şimdi bu matriste bazı satırtarlar var.

20
00:01:25,625 --> 00:01:28,296
x1'in hesaplamasına bakacak olursak,

21
00:01:28,296 --> 00:01:30,070
Elimizde olan şey

22
00:01:30,070 --> 00:01:40,021
w1 ile x1'in çarpımı 
şu şekilde çizebileceğiniz bir 
sütun vektörü vermesidir.

23
00:01:40,021 --> 00:01:47,420
Ve benzer olarak, x2 vektörüne bakarsak

24
00:01:47,420 --> 00:01:54,730
elimizdeki w1 * x2

25
00:01:54,730 --> 00:02:00,460
bize başka sütun vektörleri veriyor, değil mi?

26
00:02:00,460 --> 00:02:03,250
Bu da bize z12'yi verir.

27
00:02:03,250 --> 00:02:06,730
Sonuç olarak, eğer x3'e bakarsak,

28
00:02:06,730 --> 00:02:12,315
elimizdeki w1 * x3

29
00:02:12,315 --> 00:02:19,530
bize başka bir üçüncü sütun vektörünü yani z13'ü verecek.

30
00:02:19,530 --> 00:02:25,250
Şimdi, eğitim kümesini (büyük)X olarak oluşturalım ve

31
00:02:25,250 --> 00:02:31,475
tüm eğitim örneklerini yığma yoluyla birleştirelim.

32
00:02:31,475 --> 00:02:37,010
Şimdi (büyük)X matrisi x1 vektöründen ve

33
00:02:37,010 --> 00:02:43,430
x2 ve x3 matrislerini dik olarak yığarak oluşturuldu.

34
00:02:43,430 --> 00:02:46,250
Bu durum 3 tane eğitim örneği olursa geçerli.

35
00:02:46,250 --> 00:02:50,371
Eğer daha fazla örnek olursa, örnekler bunun gibi yatay olarak yığılacak.

36
00:02:50,371 --> 00:02:57,790
Ama x matrisini w ile çarparsak

37
00:02:57,790 --> 00:03:00,190
matris çarpımı prensibinden bildiğiniz üzere

38
00:03:00,190 --> 00:03:02,680
birinci sütun mor ile çizdiğim 

39
00:03:02,680 --> 00:03:06,313
değerlerle eşit olacak.

40
00:03:06,313 --> 00:03:10,930
İkinci sütun yeşil ile çizdiğim ve

41
00:03:10,930 --> 00:03:16,612
son olarak üçüncü sütun sarı ile çizdiğim

42
00:03:16,612 --> 00:03:19,480
değerlere eşit olacak.

43
00:03:19,480 --> 00:03:27,740
Fakat tabi ki birinci sütun z11,

44
00:03:27,740 --> 00:03:37,185
diğer sütun z12 ve son sütun z13 

45
00:03:37,185 --> 00:03:39,273
olarak ifade edilir.

46
00:03:39,273 --> 00:03:41,100
Ama bu durum 3 eğitim örneğiniz varsa geçerlidir.

47
00:03:41,100 --> 00:03:44,255
Eğer daha fazla örnek ile çalışırsanız daha fazla sütununuz olur.

48
00:03:44,255 --> 00:03:51,220
Yani bu sadece bizim oluşturduğumuz (büyük)Z1 matrisi.

49
00:03:51,220 --> 00:03:55,230
Umuyorum ki bu örnek size 

50
00:03:55,230 --> 00:04:02,830
tek bir eğitim örneğine baktığımız zaman

51
00:04:02,830 --> 00:04:08,310
w1 * xi'nin neden z1i'ye eşit olduğunu açıklar.

52
00:04:08,310 --> 00:04:12,565
Diğer eğitim örneklerine baktığımız da ve onları farklı sütunlara yığdığımızda 

53
00:04:12,565 --> 00:04:15,250
z'den elde edeceğimiz sonucun

54
00:04:15,250 --> 00:04:18,725
yine sütunlarda saklı olduğunu göreceğiz.

55
00:04:18,725 --> 00:04:24,565
Size gösteremiyorum; ama emin olabilirsiniz ki

56
00:04:24,565 --> 00:04:26,245
Python yayınlarına baktığınız zaman

57
00:04:26,245 --> 00:04:30,534
b'nin bu değerlerinin doğru olduğunu göreceksiniz.

58
00:04:30,534 --> 00:04:34,540
Aslında python yayınını bitirdiğinizde

59
00:04:34,540 --> 00:04:41,790
matrisin her bir sütununa bi'yi ekledğimiz sonucuna varırsınız.

60
00:04:41,790 --> 00:04:48,220
Bu slaytta ben sadece z1'in

61
00:04:48,220 --> 00:04:51,980
w1x + b1'e eşit olmasının 

62
00:04:51,980 --> 00:04:54,020
daha önceki slaytta incelediğimiz

63
00:04:54,020 --> 00:04:57,493
4 adımlı doğru vektörleştirmenin ilk adımı olduğunu açıkladım.

64
00:04:57,493 --> 00:04:59,990
Ama benzer bir analizle, diğer adımların da

65
00:04:59,990 --> 00:05:02,660
çok benzer bir mantık kullanarak çalıştığını göstermenize

66
00:05:02,660 --> 00:05:08,105
izin verdiği ortaya çıkıyor. Mesela girdileri<br />sütunlara yığarsanız denklemden sonra

67
00:05:08,105 --> 00:05:11,510
sütunlarda da yığılmış olan çıktıların karşılıklarını elde edersiniz.

68
00:05:11,510 --> 00:05:14,970
Son olarak bu videoda konuştuğumuz her şeyi gözden geçirelim.

69
00:05:14,970 --> 00:05:16,520
Eğer bu sizin sinir ağınız olsaydı

70
00:05:16,520 --> 00:05:21,693
söyleyeceğimiz şey <br />yayılım için uygulamanız gereken,

71
00:05:21,693 --> 00:05:27,693
her seferinde 1 eğitim örneği için i'yi 1'den m'e kadar sırayla eşitlemek. Sonrasında

72
00:05:27,693 --> 00:05:34,100
z1, a1, z2 ve a2'de uygun sütunlara yığdığımız gibi

73
00:05:34,100 --> 00:05:38,265
eğitim örneklerini de sütunlara yığarız.

74
00:05:38,265 --> 00:05:43,820
Bu a1 için bir örnek; ancak

75
00:05:43,820 --> 00:05:46,975
z1, a1, z2 ve a2 için de doğru.

76
00:05:46,975 --> 00:05:51,090
Ardından bir önceki slaytta gösterdiğimiz şey

77
00:05:51,090 --> 00:05:58,785
bu satırın size tüm m örneklerini aynı anda vektörize etmenize olanak sağlamasıydı.

78
00:05:58,785 --> 00:06:00,555
Ve benzer bir mantık ile ortaya çıkıyor ki,

79
00:06:00,555 --> 00:06:03,880
diğer tüm satırlar 4 satırın doğru bir şekilde

80
00:06:03,880 --> 00:06:08,811
vektörize edilmiş hali olduğunu gösterebiliriz.

81
00:06:08,811 --> 00:06:10,675
Ve bir hatırlatıcı olarak

82
00:06:10,675 --> 00:06:18,960
x aynı zamanda a0'a eşit çünkü hatırlayın

83
00:06:18,960 --> 00:06:27,980
girdi öznitelikli x vektörü a0'a eşit, bu yüzden xi a0i'ye eşit.

84
00:06:27,980 --> 00:06:30,870
Aslında buradaki eşitliklerde bazı simetriklikler var.

85
00:06:30,870 --> 00:06:34,110
Mesela bu ilk denklem aynı zamanda

86
00:06:34,110 --> 00:06:41,790
z1 = w1 * a0 + b1 olarak da yazılabilir.

87
00:06:41,790 --> 00:06:45,680
Bu durumda bu ikili denklem ve bu ikili denklem

88
00:06:45,680 --> 00:06:51,805
çok benzer görünüyor, sadece indeksi 1 arttırılmış.

89
00:06:51,805 --> 00:06:55,880
Yani bu tür bir sinir ağ göstermektedir ki farklı katmanlar

90
00:06:55,880 --> 00:07:00,585
kabaca aynı işi yapıyor <br />ya da aynı işlemi defalarca<br />tekrar ediyor.

91
00:07:00,585 --> 00:07:04,220
Ve burada 2-katmanlı sinir<br />ağımız var ve bir sonraki haftada

92
00:07:04,220 --> 00:07:08,475
sinir ağlarında daha derinlemesine ileleyeceğiz.

93
00:07:08,475 --> 00:07:11,670
Gördüğünüz üzere daha derin sinir ağlarında bile temelde

94
00:07:11,670 --> 00:07:16,215
bu 2 adımı alıyor ve bunu defalarca tekrarlıyor.

95
00:07:16,215 --> 00:07:21,255
Bu olay sizin sinir ağınızın nasıl birçok eğiti örneğinde vektörize edileceğini gösteriyor.

96
00:07:21,255 --> 00:07:25,590
Şimdiye kadar sinir ağımızda sigmoid fonksiyonu kullandık.

97
00:07:25,590 --> 00:07:27,925
Bunun aslında en iyi seçim olmadığını gösteriyor.

98
00:07:27,925 --> 00:07:29,675
Bir sonraki videoda daha derine inip

99
00:07:29,675 --> 00:07:32,450
sizin nasıl farklı bir etkileşim fonksiyonunu kullanacağınızı

100
00:07:32,450 --> 00:07:37,190
inceleyeceğiz, mesela sigmoid fonksiyonu bir seçenek olabilir.