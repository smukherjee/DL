1
00:00:00,000 --> 00:00:02,070
Com tudo que você aprendeu, deve estar

2
00:00:02,070 --> 00:00:04,745
pronto para resolver seu primeiro exercício de programação.

3
00:00:04,745 --> 00:00:10,130
Antes disso, deixe-me dar um rápido tour
pelos notebooks iPython no Coursera

4
00:00:10,130 --> 00:00:14,545
Aqui você vê o Jupyter iPython Notebook
que você consegue no Coursera.

5
00:00:14,545 --> 00:00:17,520
Deixe-me mostrar rapidamente algumas características dele.

6
00:00:17,520 --> 00:00:21,885
As instruções estão escritas aqui
no texto do iPython Notebook.

7
00:00:21,885 --> 00:00:25,460
E esses grandes blocos cinza são blocos de códigos.

8
00:00:25,460 --> 00:00:27,030
Então, eventualmente, você verá

9
00:00:27,030 --> 00:00:29,255
nesses blocos algo similar a isso:

10
00:00:29,255 --> 00:00:31,860
'###CÓDIGO INICIAL AQUI### e ###CÓDIGO FINAL AQUI###'
Para fazer seu exercício, por favor, tenha certeza

11
00:00:31,860 --> 00:00:36,755
de escrever seu código entre [as linhas]
'###CÓDIGO INICIAL AQUI### e ###CÓDIGO FINAL AQUI###'

12
00:00:36,755 --> 00:00:41,485
Então, por exemplo: ' print  ("Olá mundo") '.

13
00:00:41,485 --> 00:00:44,085
E, então, para executar um bloco de códigos,

14
00:00:44,085 --> 00:00:49,355
você pode apertar shift+enter e, então,
executar este bloco de códigos.

15
00:00:49,355 --> 00:00:51,265
Nós apenas escrevemos: ' print  ("Olá mundo") '.

16
00:00:51,265 --> 00:00:53,355
Então, imprimirá "Olá mundo".

17
00:00:53,355 --> 00:00:55,140
Para executar uma célula,

18
00:00:55,140 --> 00:00:56,940
você pode também executar um desses
blocos de códigos,

19
00:00:56,940 --> 00:01:01,200
clicando em 'Cell' e 'Run Cells'.
Então, isso é executado.

20
00:01:01,200 --> 00:01:05,275
É possível que no seu computador,

21
00:01:05,275 --> 00:01:07,364
a tecla de atalho para 'Cell' (célula)

22
00:01:07,364 --> 00:01:09,105
e 'Run Cells' (executar células) sejam 
diferentes do 'shift+enter',

23
00:01:09,105 --> 00:01:14,070
mas tanto no meu Mac 
quanto no meu PC é 'shift+enter'.

24
00:01:14,070 --> 00:01:16,550
Então, pode ser igual para você também.

25
00:01:16,550 --> 00:01:18,480
Agora, quando você 
estiver lendo as instruções,

26
00:01:18,480 --> 00:01:20,960
se você, acidentalmente,
der um duplo clique sobre ela,

27
00:01:20,960 --> 00:01:24,270
poderá ter esta linguagem – "Markdown" –
como resultado.

28
00:01:24,270 --> 00:01:26,700
Se você obtiver este texto estranho,

29
00:01:26,700 --> 00:01:30,390
para convertê-lo de volta para o texto bonito,
apenas execute esta célula.

30
00:01:30,390 --> 00:01:34,740
Então, você pode ir em 'Cell' > 'Run Cells',
ou pode apertar shift+enter.

31
00:01:34,740 --> 00:01:39,630
E isso, basicamente, executa o 'markdown'
e retorna ao código de aparência agradável.

32
00:01:39,630 --> 00:01:41,565
Apenas mais algumas dicas.

33
00:01:41,565 --> 00:01:43,795
Quando você executa código como esse,

34
00:01:43,795 --> 00:01:48,333
na verdade, ele roda em um núcleo
do sistema operacional ("kernel"),

35
00:01:48,333 --> 00:01:51,947
em um pedaço de código,
que é executado no servidor.

36
00:01:51,947 --> 00:01:54,900
Se você está executando um 
trabalho excessivamente grande ou se

37
00:01:54,900 --> 00:01:59,121
você deixar um computador por um 
tempo muito longo ou se algo der errado

38
00:01:59,121 --> 00:02:00,505
com a sua conexão de internet ou algo assim,

39
00:02:00,505 --> 00:02:03,160
há uma chance pequena de um
"kernel" parar de funcionar no "back-end".

40
00:02:03,160 --> 00:02:06,690
Nesse caso, basta clicar 'Kernel' 
e então o 'Restart'.

41
00:02:06,690 --> 00:02:10,415
Espero que isso reinicie o "kernel"
e ele volte a funcionar.

42
00:02:10,415 --> 00:02:13,080
Então, isto não deve acontecer
se você estiver executando

43
00:02:13,080 --> 00:02:16,858
trabalhos relativamente pequenos e se você 
estiver apenas iniciando o iPython Notebook.

44
00:02:16,858 --> 00:02:19,995
Se você vir uma mensagem de erro 
que o "Kernel" parou ou algo assim,

45
00:02:19,995 --> 00:02:21,310
você pode tentar 'Kernel', 'Restart'.

46
00:02:21,310 --> 00:02:25,362
Finalmente, no iPython Notebook como este,

47
00:02:25,362 --> 00:02:27,845
pode haver
múltiplos blocos de códigos.

48
00:02:27,845 --> 00:02:33,255
Então, mesmo que, como em bloco de código anterior,
não tenha qualquer código criado,

49
00:02:33,255 --> 00:02:35,550
assegure-se de executar 
este bloco de código porque,

50
00:02:35,550 --> 00:02:39,698
neste exemplo, os seus
"import numpy as np", etc,

51
00:02:39,698 --> 00:02:42,360
inicializa algumas variáveis 
que você poderá precisar para

52
00:02:42,360 --> 00:02:45,570
executar os blocos de códigos abaixo.

53
00:02:45,570 --> 00:02:50,845
Então, certifique-se de executar os blocos acima, mesmo que
não tenha pedidos para escrever algum código neles.

54
00:02:50,845 --> 00:02:53,705
E finalmente, quando você terminar 
a implementação de suas soluções,

55
00:02:53,705 --> 00:02:57,920
há este botão de enviar aqui 
no canto superior direito, e nós

56
00:02:57,920 --> 00:03:02,130
clicamos nele para enviar as soluções para avaliações.

57
00:03:02,130 --> 00:03:05,520
Eu achei a natureza 
shell de comandos interativos

58
00:03:05,520 --> 00:03:09,008
do iPython notebook muito 
úteis para você

59
00:03:09,008 --> 00:03:10,520
implementar poucas linhas de códigos,

60
00:03:10,520 --> 00:03:13,450
ver a saída e aprender bem rapidamente.

61
00:03:13,450 --> 00:03:17,430
E assim, eu espero que esses 
exercícios de Jupyter iPython Notebook do

62
00:03:17,430 --> 00:03:20,775
Coursera o ajude a aprender rapidamente,

63
00:03:20,775 --> 00:03:24,535
experimentar e ver como 
implementar esses algoritmos.

64
00:03:24,535 --> 00:03:26,325
Há mais um vídeo depois deste.

65
00:03:26,325 --> 00:03:28,695
É um vídeo opcional que fala sobre

66
00:03:28,695 --> 00:03:32,210
a função custo de regressão logística. 
Você pode assisti-lo ou não.

67
00:03:32,210 --> 00:03:33,745
Qualquer forma escolhida está ok.

68
00:03:33,745 --> 00:03:38,140
Mas de qualquer forma,
boa sorte com as atividades da 'semana 2'.

69
00:03:38,140 --> 00:03:42,720
E eu espero vê-lo no início da semana três. 
[Tradução: Renato Barata Gomes | Revisão: Julia Yuri]