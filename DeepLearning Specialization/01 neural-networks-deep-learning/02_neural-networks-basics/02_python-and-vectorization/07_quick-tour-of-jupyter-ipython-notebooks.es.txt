Con todo lo que han aprendido ya están listos para encarar la primera tarea de programación. Antes de hacerlo, haremos un breve recorrido por los Notebooks iPython en Coursera. Éste es el Notebook iPython de Jupyter al que puedes acceder en Coursera. Te mostraré rápidamente algunas de sus características. Las instrucciones están escritas aquí en el texto del iPython Notebook. Y estos bloques grises grandes son bloques de código. Ocasionalmente verán estos bloques que dicen: START CODE HERE y END CODE HERE. Para hacer el ejercicio por favor asegúrate de escribir el código entre START CODE HERE y END CODE HERE. Por ejemplo, print Hello world y luego para ejecutar el bloque de código se puede presionar shift+enter para ejecutar el bloque. Supongo que simplemente escribimos print Hello world. Y eso da como salida Hello world. Para ejecutar una celda, además, para ejecutar uno de estos bloques de código, se puede hacer click en la celda y después en run cell. Con eso ejecutamos esto. Es posible que en algunas computadoras el atajo de teclado para Cell o Run Cell sea diferente que shift+enter. En Mac y en mi PC es shift+enter, así debería ser para ti también. Ahora, cuando lees las instrucciones, Si accidentalmente hace doble clic en ellas, podrías terminar con este lenguaje tipo markdown Si terminas con este texto de aspecto raro, para convertirlo de nuevo al texto de aspecto agradable, solo ejecuta esta celda. Asi que puedes ir a Cell, Run Cell, o en mi caso, presionaré shift+enter y eso básicamente ejecuta el mark down y lo convierte nuevamente al texto de aspecto agradable. Solo un par de consejos más. Cuando ejecutas código como este, realmente se ejecuta en un kernel, en un fragmento de código que se ejecuta en el servidor. Si estas ejecutando un trabajo excesivamente grande o si dejas la computadora por un tiempo muy largo o algo sale mal, como tu conexión a internet o algo así, hay una pequeña posibilidad de que el kernel en el back end muera, en cuyo caso, solo haz click en Kernel y luego en Restart Kernel. Y con suerte, eso reiniciará el kernel y lo hará funcionar de nuevo. Así que esto no debería de suceder si sólo estas ejecutando trabajos relativamente pequeños y sólo estas iniciando el notebook iPython. Si ves un mensaje de error que el kernel ha muerto o algo así, puedes tratar Kernel, Restart. Finalmente, en un notebook iPython como este, puede haber varios bloques de código. Así que, incluso si un bloque de código anterior, no tiene código calificado asegúrate de ejecutar este bloque de código porque, en este ejemplo, importa numpy como np y así sucesivamente e inicializa algunas de las variables que puede que necesites para poder ejecutar los siguientes bloques de código. Así que, asegúrate de ejecutar lo que estan en la parte superior, incluso si no se te pide escribir ningún código en ellos. Y finalmente, cuando termines de implementar tus soluciones, está este botón azul de enviar asignación en la parte superior derecha, al cual daremos click para enviar tus soluciones y que sean calificadas. Pienso que la naturaleza interactiva de la línea de comandos de los notebooks iPython es muy útil para aprender rápidamente, implementar unas cuantas lineas de código, observar un resultado e iterar rápidamente. Y de este modo, espero que de los ejercicios de programación en Coursera, en los notebooks de Jupyter iPython te ayuden a aprender de forma mas rápida y experimentar y observar como implementar estos algoritmos de aprendizaje. Hay un video adicional después de este. Este es un video adicional que habla sobre la función de costo para regresión logística. Puedes verlo o no. De cualquier manera está perfectamente bien. Pero de cualquier manera, mucha suerte en las tareas de programación de la semana 2. Y también espero verte al comienzo de la semana 3.