1
00:00:00,000 --> 00:00:02,070
من خلال كل شيء تعلمتموه، أنتم على وشك

2
00:00:02,070 --> 00:00:04,745
تناول واجب البرمجة الأول لكم.

3
00:00:04,745 --> 00:00:10,130
وقبل القيام بذلك، دعوني فقط أقدّم لكم جولة
سريعة حول كتب iPython في كورسيرا.

4
00:00:10,130 --> 00:00:14,545
إليكم كتاب Jupiter iPython الذي يمكنكم الوصول إليه على كورسيرا.

5
00:00:14,545 --> 00:00:17,520
دعوني فقط أوضح لكم بعض ميزات ذلك.

6
00:00:17,520 --> 00:00:21,885
التعليمات مكتوبة هنا في النص الموجود في كتاب iPython.

7
00:00:21,885 --> 00:00:25,460
وهذه الكتل البرمجية الطويلة المكتوبة باللون
الرمادي الفاتح هي كتل من التعليمات البرمجية.

8
00:00:25,460 --> 00:00:27,030
لذا فسترون عادة في

9
00:00:27,030 --> 00:00:29,255
هذه الكتل البرمجية شيئًا سيتضمن هذه العبارات
"بدء التعليمات البرمجية هنا" "START CODE HERE" و"إنهاء التعليمات البرمجية هنا" "END CODE HERE".

10
00:00:29,255 --> 00:00:31,860
للقيام بالتمرين الخاص بكم، يرجى التأكد من

11
00:00:31,860 --> 00:00:36,755
كتابة تعليماتكم البرمجية بين "بدء التعليمات
البرمجية هنا" و"إنهاء التعليمات البرمجية هنا".

12
00:00:36,755 --> 00:00:41,485
على سبيل المثال، "print Hello world".

13
00:00:41,485 --> 00:00:44,085
وبعد ذلك لتنفيذ كتلة تعليمات برمجية،

14
00:00:44,085 --> 00:00:49,355
يمكنكم النقر فوق shift+enter، ثم تنفيذ
كتلة التعليمات البرمجية هذه والتي،

15
00:00:49,355 --> 00:00:51,265
أعتقد، كتبنا فقط "print Hello world".

16
00:00:51,265 --> 00:00:53,355
وبالتالي تتم طباعة Hello world.

17
00:00:53,355 --> 00:00:55,140
لتشغيل خلية،

18
00:00:55,140 --> 00:00:56,940
يمكنكم أيضًا لتشغيل واحدة من كتلة
التعليمات البرمجية الخاصة بالخلية هذه،

19
00:00:56,940 --> 00:01:01,200
يمكنكم أيضًا النقر فوق cell "خلية"، ثم
 run cell "تشغيل خلية". وبالتالي يتم تنفيذ هذا الأمر.

20
00:01:01,200 --> 00:01:05,275
من الممكن بالنسبة للكمبيوتر لديكم،

21
00:01:05,275 --> 00:01:07,364
أن يكون اختصار لوحة المفاتيح للخيار "خلية"،

22
00:01:07,364 --> 00:01:09,105
"تشغيل خلية" مختلفًا عن shift+enter.

23
00:01:09,105 --> 00:01:14,070
ولكن على جهاز Mac وكذلك على الكمبيوتر
الشخصي الخاص بي، فالاختصار هو shift+enter،

24
00:01:14,070 --> 00:01:16,550
ولذلك ربما يكون الأمر مماثلاً لكم أيضًا.

25
00:01:16,550 --> 00:01:18,480
الآن عندما تقرؤون التعليمات،

26
00:01:18,480 --> 00:01:20,960
إذا نقرتم فوقها دون قصد،

27
00:01:20,960 --> 00:01:24,270
فقد ينتهي بكم الأمر وأنتم تعرضون لغة markdown هذه.

28
00:01:24,270 --> 00:01:26,700
إذا انتهى بكم المطاف وأنتم تعرضون هذا النص غريب الشكل

29
00:01:26,700 --> 00:01:30,390
ولتحويله مرة أخرى إلى النص جيد الشكل
 فما عليكم إلا تشغيل هذه الخلية.

30
00:01:30,390 --> 00:01:34,740
وبالتالي يمكنكم الانتقال إلى "خلية"
 ثم "تشغيل خلية"، أو سأنقر فوق shift+enter

31
00:01:34,740 --> 00:01:39,630
وسيؤدي هذا بشكل أساسي إلى تنفيذ لغة
mark down ويعيدها مرة أخرى إلى هذه التعليمات البرمجية جيدة المظهر.

32
00:01:39,630 --> 00:01:41,565
فقط بعض النصائح الإضافية.

33
00:01:41,565 --> 00:01:43,795
عندما تقومون بتنفيذ تعليمات برمجية كهذه،

34
00:01:43,795 --> 00:01:48,333
فإنها تعمل بالفعل على kernel،

35
00:01:48,333 --> 00:01:51,947
على تعليمات برمجية تعمل على الخادم.

36
00:01:51,947 --> 00:01:54,900
إذا كنتم تشغّلون مهمة كبيرة جدًا أو

37
00:01:54,900 --> 00:01:59,121
إذا تركتم الكمبيوتر لفترة طويلة جدًا أو حدث خطأ ما،

38
00:01:59,121 --> 00:02:00,505
فيما يتعلق باتصال الإنترنت أو شيء من هذا القبيل،

39
00:02:00,505 --> 00:02:03,160
فهناك فرصة صغيرة بأن kernel
الموجود في الخلفية قد أصبح خامدًا،

40
00:02:03,160 --> 00:02:06,690
وفي هذه الحالة، ما عليكم إلا النقر
فوق Kernel، ثم إعادة تشغيل Kernel.

41
00:02:06,690 --> 00:02:10,415
وآمل أن يؤدي ذلك إلى إعادة تشغيل kernel وجعله يعمل مرة أخرى.

42
00:02:10,415 --> 00:02:13,080
لذا يجب ألا يحدث هذا إذا كنتم تقومون بتشغيل

43
00:02:13,080 --> 00:02:16,858
مهام صغيرة نسبيًا وتبدؤون للتو كتاب iPython.

44
00:02:16,858 --> 00:02:19,995
إذا رأيتم رسالة خطأ بأن Kernel
قد أصبح خامدًا أو ما شابه،

45
00:02:19,995 --> 00:02:21,310
يمكنكم محاولة الضغط على Kernel، ثم إعادة تشغيل.

46
00:02:21,310 --> 00:02:25,362
أخيرًا، في كتاب iPython،

47
00:02:25,362 --> 00:02:27,845
مثل هذا، قد تكون هناك كتل متعددة من التعليمات البرمجية.

48
00:02:27,845 --> 00:02:33,255
لذا، حتى إذا كانت كتلة التعليمات
البرمجية السابقة لا تحتوي على تعليمات برمجية مصنفة،

49
00:02:33,255 --> 00:02:35,550
فتأكدوا من تنفيذ كتلة التعليمات البرمجية هذه لأنه،

50
00:02:35,550 --> 00:02:39,698
في هذا المثال، يتم استيراد numpy as np وهكذا،

51
00:02:39,698 --> 00:02:42,360
ويتم إعداد بعض المتغيرات التي قد تحتاجون إليها

52
00:02:42,360 --> 00:02:45,570
لتنفيذ كتل التعليمات البرمجية الموجودة بالأسفل.

53
00:02:45,570 --> 00:02:50,845
ويجب عليكم التأكد من تنفيذ التعليمات البرمجية
بالأعلى حتى في حالة عدم مطالبتكم بكتابة أي تعليمات برمجية فيها.

54
00:02:50,845 --> 00:02:53,705
وأخيرًا، عندما تنتهون من تنفيذ حلولكم،

55
00:02:53,705 --> 00:02:57,920
فهناك زر إرسال الواجب "submit assignment" باللون
الأزرق هنا في الجزء العلوي الأيمن

56
00:02:57,920 --> 00:03:02,130
انقروا فوقه لإرسال حلولكم للتقييم.

57
00:03:02,130 --> 00:03:05,520
لقد وجدت أن طبيعة أوامر shell التفاعلية

58
00:03:05,520 --> 00:03:09,008
لكتب iPython مفيدة للغاية للتعلم سريعًا،

59
00:03:09,008 --> 00:03:10,520
وتنفيذ أسطر تعليمات برمجية قليلة

60
00:03:10,520 --> 00:03:13,450
ومشاهدة النتيجة والتعلّم والإضافة سريعًا جدًا.

61
00:03:13,450 --> 00:03:17,430
وآمل أن من التمارين الموجودة في كورسيرا،

62
00:03:17,430 --> 00:03:20,775
وكتب Jupyter iPython ستساعدكم في التعلّم

63
00:03:20,775 --> 00:03:24,535
والتجربة ومعرفة كيفية تنفيذ هذه الخوارزميات بسرعة.

64
00:03:24,535 --> 00:03:26,325
هناك فيديو آخر بعد ذلك.

65
00:03:26,325 --> 00:03:28,695
وهو فيديو اختياري يتحدث حول

66
00:03:28,695 --> 00:03:32,210
دالة التكلفة للانحدار اللوجستي.
ويمكنكم مشاهدته أو عدم مشاهدته.

67
00:03:32,210 --> 00:03:33,745
في كلتا الحالتين سيكون الأمر على ما يرام .

68
00:03:33,745 --> 00:03:38,140
ولكن على أي حال، أتمنى لكم حظًا سعيدًا في
واجبات البرمجة للأسبوع الثاني.

69
00:03:38,140 --> 00:03:42,720
وأتطلع أيضًا إلى رؤيتكم في بداية محاضرة الأسبوع الثالث.