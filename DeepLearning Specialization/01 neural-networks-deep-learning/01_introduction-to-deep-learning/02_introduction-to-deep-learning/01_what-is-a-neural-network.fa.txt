این اصطلاح، یادگیری عمیق،
به آموزش شبکه های عصبی، گاهی اوقات
شبکه‌های عصبی بسیار بزرگ اشاره دارد. بنابراین دقیقا یک شبکه عصبی چیست؟ در این ویدیو، سعی کردیم
چند نکته‌ی اساسی را به شما ارائه بدهیم. بیایید با مثال پیش‌بینی قیمت مسکن شروع کنیم. فرض کنید یک مجموعه داده با شش خانه دارید،
بنابراین شما اندازه خانه‌ها را به فوت مربع یا متر مربع و قیمت خانه را می‌دانید و می خواهید یک تابع
برای پیش بینی قیمت خانه به عنوان تابع اندازه ایجاد کنید. بنابراین اگر با رگرسیون خطی آشنا باشید،
ممکن است بگوئید، خب بیایید یک خط مستقیم برای این داده ها درنظربگیریم،
و یک خط مستقیم مانند آن را انتخاب می کنیم. اما پاتانی‌ها ممکن است بگویند،
خوب ما می دانیم که قیمت‌ها هرگز نمی تواند منفی باشند، بنابراین به جای تناسب خط مستقیم
که در نهایت منفی می شود، بگذارید منحنی را خم کنیم. بنابراین در اینجا صفر می‌شود. پس به نظر می رسد این خط آبی ضخیم
به تابع شما برای پیش بینی قیمت خانه
به عنوان تابع اندازه پایان می‌دهد. پس صفر اینجا و
یک خط مستقیم متناسب به سمت راست وجود دارد. پس می‌توانید بگویید
این تابع برای قیمت مسکن مناسب است و این یک شبکه‌ی عصبی خیلی ساده است. تقریبا ساده‌ترین شبکه‌ی عصبی موجود است. بگذارید موضوع را برایتان بشکافم. ما به عنوان ورودی شبکه عصبی،
اندازه یک خانه را که یکی از آنها x نامیده می شود داریم. وارد این دایره‌ی کوچک می‌شود و بعد قیمت را نشان می‌دهد که y می‌نامیم. بنابراین این دایره کوچک که
یک نورون تک در یک شبکه عصبی است، این تابع را که در سمت چپ قرار دادیم اجرا می‌کند. و تمام نورونها اندازه‌ی ورودی را وارد می‌کنند،
این تابع خطی را محاسبه می کنند، حداکثر صفر را می‌گیرد
و سپس قیمت تخمینی را ارائه می‌دهد. و در منابع علمی مربوط به شبکه عصبی هم،
این تابع را بسیار مشاهده می‌کنید. این تابع که گاهی در بعضی نقاط صفر است، و بعد شکل خط مستقیم پیدا می‌کند. این تابع یک تابع ReLU نامیده می شود که به معنای واحدهای خطی تصحیح شده است. بنابراین R-E-L-U. و اصلاح فقط به معنی گرفتن حداکثر 0 است،
و به همین دلیل شکل تابع اینگونه است. در حال حاضر نیازی
به نگرانی در مورد واحدهای ReLU نیست، اما در ادامه‌ی دوره به آن می‌پردازیم. بنابراین اگر این
یک تک نورون، یک شبکه عصبی باشد یک شبکه عصبی خیلی کوچک،
پس شبکه های عصبی بزرگتر با در نظر گرفتن چندین نورون تک
و آمیختن آنها با هم تشکیل شده است. بنابراین، اگر این نورون را
مانند یک آجر لگو در نظر بگیرید، پس یک شبکه عصبی بزرگتر را
با جمع آوری چندین آجر لگو می‌توانید ایجاد کنید. بیایید یک مثال را ببینیم. فرض کنید به جای
پیش بینی قیمت یک خانه فقط از روی اندازه، ویژگی‌های دیگری هم داشته باشید. چیزهای دیگری در مورد خانه
مانند تعداد اتاق خواب‌ها، باید تعداد اتاق‌ها را بنویسم،
و ممکن است فکر کنید که یکی از چیزهایی است که
بر قیمت یک خانه تاثیر می گذارد اندازه خانواده است. اینکه خانه برای خانواده سه، چهار یا پنج نفره مناسب باشد. و اندازه خانه به فوت مربع و یا متر مربع و تعداد اتاق خواب‌ها است که تعیین می‌کند آیا خانه می تواند
متناسب اندازه خانواده شما باشد یا نه. و همچنین شاید زیپ کد را هم بدانید، در بعضی کشورها کد پستی هم نامیده می‌شود. و کد پستی ممکن است به عنوان یک پیش بینی کننده
به شما درباره قابلیت پیاده‌روی بگوید. بنابراین آیا قابلیت پیاده روی
در این محله بسیار بالا است؟ یعنی پیاده می‌توانید به فروشگاه مواد غذایی بروید؟ پیاده به مدرسه بروید؟ آیا نیاز به ماشین دارید؟ و بعضی از مردم محله هایی
با قابلیت پیادره وری بالا را ترجیح می‌دهند. پس کد پستی و همچنین ثروتمندی
اطلاعاتی ارائه می‌دهد. مطمئنا در ایالات متحده اینطور است،
و همچنین برخی کشورهای دیگر. به شما می گوید
کیفیت مدرسه چقدر خوب است. بنابراین هر کدام از این دایره‌های کوچکی
که رسم می‌کنم، می تواند یکی از آن ReLU ها، واحدهای خطی تصحیح شده
و یا برخی دیگر تابع کمی غیرخطی باشد. به طوری که بر اساس
اندازه و تعداد اتاق خواب‌ها، می توانید اندازه خانواده را تخمین بزنید،
و بر اساس کد پستی قابلیت پیاده روی، و براساس کد پستی و ثروتمندی کیفیت مدرسه را. و در نهایت ممکن است فکر کنید که
مردم تصمیم می گیرند که چقدر حاضرند برای خرید یک خانه هزینه کنند،
بر اساس چیزهایی که واقعا برای آنها اهمیت دارد. در این مورد اندازه خانواده، قابلیت پیاده روی، و کیفیت مدرسه.
و این کمک می کند تا قیمت را پیش بینی کنید. بنابراین در مثال x تمام این چهار ورودی است. و Y قیمتی است که می‌خواهید پیش‌بینی کنید. و بنابراین با جمع آوری چندین نورون تک
یا پیش بینی کننده های ساده که از اسلاید قبلی داریم،
اکنون یک شبکه عصبی کمی بزرگتر داریم. نحوه مدیریت شبکه عصبی این است که
هنگامی که آن را اجرا می کنید، باید فقط ورودی x و خروجی y را برای تعدادی از نمونه های موجود
در مجموعه آموزش خود در نظر بگیرید و تمام این موارد را در وسط قرار دهید،
و آنها خود به خود حل می‌شوند. بنابراین آنچه در واقع اجرا می کنید این است: در اینجا، یک شبکه عصبی با چهار ورودی دارید. بنابراین ویژگی های ورودی ممکن است
اندازه، تعداد اتاق خواب ها، زیپ کد یا کد پستی و ثروت محله باشد. بنابراین با توجه به این ویژگی‌های ورودی، کار شبکه عصبی، پیش بینی قیمت y خواهد بود. همچنین توجه کنید که هر یک از این حلقه‌ها،
واحدهای پنهان در شبکه عصبی نامیده می‌شوند، که هر کدام از آنها
شامل چهار ویژگی ورودی هستند. به عنوان مثال، به جای اینکه بگوییم
گره اول نشان دهنده اندازه خانواده است و اینکه اندازه خانواده فقط
به ویژگی‌های X1 و X2بستگی دارد، در عوض، قصد داریم بگوییم
در شبکه عصبی، شما تصمیم می گیرید
که هر حلقه بیانگر چه چیزی باشد و به شما تمام چهار ویژگی را
برای تکمیل هر چیزی بخواهید می‌دهیم. بنابراین می‌گوئیم لایه هایی مانند لایه‌ی ورودی و لایه‌ای در میانه‌ی شبکه عصبی کاملا به هم مرتبطند. از آنجا که هر ویژگی ورودی به هر یک از این حلقه ها در وسط متصل می شود. و چیز قابل توجه در مورد شبکه های عصبی این است
که در صورت وجود داده‌های کافی برای x و y، در صورت وجود نمونه‌های آموزشی کافی
برای x و y، شبکه های عصبی در بدست آوردن توابع نقشه دقیق
از x به y بسیار خوب عمل می‌کنند. بنابراین، این یک شبکه عصبی پایه است. با ساخت شبکه‌های عصبی، احتمالا آنها را بسیار مفید و قدرتمند در زمینه‌های یادگیری تحت نظارت خواهید یافت
به این معنی که بخواهید با داشتن ورودی x آن را به خروجی Y هدایت کنید،
مانند چیزی که در پیش‌بینی قیمت مسکن دیدم. در ویدیوی بعدی، نمونه‌های بیشتری
از یادگیری تحت نظارت را بررسی می‌کنیم و چند مثال می‌زنیم تا بتوانید
فایده‌های فراوان ایجاد شبکه را برای برنامه‌هایتان هم ببینید.