تحدثنا عن كيفية قيام التحويل لمتجه بتسريع التعليمة البرمجية بشكل كبير. في هذا الفيديو، سنتحدث عن كيفية قيامك بتحويل تطبيق الانحدار اللوجستي لمتجه، بحيث يمكنك معالجة مجموعة تدريبية بالكامل تنفذ ارتقاءً واحدًا لهبوط التصنيف فيما يتعلق بمجموعة تدريبية بالكامل حتى دون استخدام عملية صريحة واحدة للتكرار الحلقي. أنا متحمس جدًا لهذا الأسلوب، وعندما نتحدث عن الشبكات العصبية لاحقًا حتى دون استخدام عملية صريحة واحدة للتكرار الحلقي. لنبدأ. ولنتعرف أولاً على خطوات الانتشار الأربع للانحدار اللوجيستي. لذا إذا كان لديك أمثلة التدريب M، فمن ثمّ يمكنك التنبؤ بالمثال الأول، وتحتاج إلى حساب ذلك، احسب Z. أنا أستخدم هذه الصيغة المألوفة، ثم احسب حالات التنشيط، يمكنك حساب [غير مسموع] في المثال الأول. ولإجراء تنبؤ بالمثال التدريبي الثاني، تحتاج إلى حساب ذلك. وبعد ذلك، لإجراء تنبؤ بالمثال الثالث، تحتاج إلى حساب ذلك، وهكذا. وقد تحتاج إلى إجراء عمليات M هذه، إذا كان لديك أمثلة التدريب M. لذا يتضح الأمر أنه لإجراء خطوات الانتشار الأربع وحساب هذه التنبؤات في أمثلة التدريب M لدينا، توجد طريقة لإجراء ذلك دون الحاجة إلى عملية صريحة للتكرار الحلقي. لنتعرف على كيفية قيامك بذلك. أولاً، تذكر أننا حددنا مصفوفة
X لتكون إدخالات التدريب لديك ونكدسها معًا في أعمدة مختلفة هكذا. لذا، فإنها تمثل مصفوفة، بحيث تكون مصفوفة NX مضروبة في M. أكتب ذلك كشكل دائري بلغة بايثون، ويعني ذلك أن X يمثل مصفوفة
أبعاد NX مضروبة في M. والآن أريد أولاً أن أوضح لك
كيفية حساب Z1 وZ2 وZ3 وهكذا في خطوة واحدة، وفي الواقع باستخدام سطر واحد من التعليمة البرمجية. سأنشئ مصفوفة 1 مضروبة في M وهذا بالفعل متجه عمودي عندما أحسب Z1 وZ2 وهكذا حتى ZM في الوقت نفسه. ويتضح أنه يمكن التعبير عن ذلك كالآتي منقولة مصفوفة W لمصفوفة X مضافًا إليها هذا المتجه B وB وهكذا. يمثل B B، B، B، B B متجه 1xM أو مصفوفة 1xM أو متجهًا صفيًا لأبعاد M. لذا نأمل أنك تعرفت على عملية ضرب المصفوفات. قد تجد أن منقولة مصفوفة W لـ X1 وX2 وهكذا حتى XM يمكن أن تمثل منقولة مصفوفة W متجهًا صفيًا. لذا ستمثل منقولة مصفوفة W هذه متجهًا صفيًا كهذا. وهكذا سيتم تقييم المصطلح الأول
ليكون منقولة مصفوفة W لـ X1 ومنقولة مصفوفة W لـ X2 وهكذا حتى منقولة مصفوفة W لـ XM، ثم نضيف المصطلح الثاني B وB وB وهكذا، وسينتهي بك الأمر بإضافة B إلى كل عنصر. لذا سينتهي بك الأمر بمتجه 1xM آخر. حسنًا، هذا هو العنصر الأول وهذا هو العنصر الثاني وهكذا، وهذا هو العنصر رقم n. وفي حالة الرجوع إلى التعاريف أعلاه، يمثل العنصر الأول تعريف Z1 بالضبط. بينما يمثل العنصر الثاني تعريف Z2 بالضبط وهكذا. لذا بمجرد الحصول على X عندما تتعرف على أمثلة التدريب وتكدسها جنبًا إلى جنب بشكل أفقي. سأحدد Z بالحرف الكبير على أنه هذا بينما تحدد حالات Z بالحرف الصغير وتكدسها أفقيًا. لذا عندما تكدس حالات X بالحرف
الصغير مقابل أمثلة التدريب المختلفة، ستحصل على المتغير X هذا بالحرف الكبير أفقيًا، وبالطريقة نفسها عندما تحدد
متغيرات Z بالحرف الصغير هذه وتكدسها أفقيًا، تحصل على متغير Z بالحرف الكبير هذا. ويتضح أنه لتطبيق ذلك، يكون الأمر غير الدائري هو Z بالحرف
الكبير يساوي NP نقطة W نقطة T، إنها منقولة مصفوفة W لـ X، ومضافًا إليها B. والآن نجد أنه بايثون تتمتع بالدقة، بحيث تمثل B هنا رقمًا حقيقيًا أو إذا
كنت تريد أن تقول إنك تعرف أن مصفوفة 1x1 هي مجرد رقم حقيقي عادي. ولكن عندما تضيف هذا المتجه إلى هذا الرقم الحقيقي، تأخذ بايثون تلقائيًا هذا الرقم الحقيقي B
وتوسع نطاقه إلى المتجه الصفي 1XM هذا. لذا في حالة أن هذه العملية تبدو غامضة إلى حد ما، يُعرف ذلك بعملية البث في بايثون ولا تقلق بشأن ذلك الآن حيث إننا سنتناول ذلك بالتفصيل في الفيديو التالي. ولكن تتمثل المعلومة هنا أنه باستخدام سطر
واحد فقط من التعليمة البرمجية وبهذا السطر من التعليمة البرمجية يمكنك حساب Z بالحرف الكبير الذي يمثل مصفوفة 1XM التي تتضمن كل حالات Z بالحرف الصغير. من Z1 بالحرف الصغير حتى ZM بالحرف الصغير. تحدثنا عن Z، ولكن ماذا عن قيم A هذه. ما سنتناوله بعد ذلك هو البحث عن طريقة لحساب A1 وA2 وهكذا حتى AM جميعها في الوقت نفسه، وكما نتج عن تكديس X بالحرف الصغير X بالحرف الكبير ونتج عن تكديس Z
بالحرف الصغير أفقيًا Z بالحرف الكبير، سينتج عن تكديس A بالحرف الصغير متغير جديد نحدده على أنه A بالحرف الكبير. وفي تعيين البرنامج، إنك تتعرف على كيفية تطبيق دالة سينية محددة بقيمة متجه، لذا تقوم الدالة السينية بإدخال Z بالحرف الكبير هذا كمتغير وتقوم
بإخراج A بالحرف الكبير بكفاءة عالية. لذا فإنك تتعرف على تفاصيل ذلك في تعيين البرمجة. ولتلخيص ذلك، ما تعرفت عليه في هذه الشريحة أنه بدلاً من التكرار الحلقي لأمثلة التدريب M لحساب Z بالحرف
الصغير وA بالحرف الصغير في الوقت نفسه، يمكنك تطبيق هذا السطر من التعليمة البرمجية لحساب كل حالات Z هذه في الوقت نفسه. ويمكنك بعد ذلك استخدام هذا السطر من التعليمة البرمجية بتطبيق مناسب لسيجما بالحرف الصغير لحساب كل حالات
A بالحرف الصغير في الوقت نفسه. لذا فهذه طريقة إجراء تطبيق التحويل لمتجه الخاص بخطوات الانتشار الأربع
لكل أمثلة تدريب M في الوقت نفسه. لإيجاز ذلك، لقد تعرفت على كيفية استخدام عملية التحويل لمتجه لحساب كل
عمليات التنشيط بكفاءة عالية، وكذلك كل حالات A بالحرف
الصغير في الوقت نفسه. وبعد ذلك، يتضح أنه يمكنك
أيضًا استخدام عملية التحويل لمتجه لحساب الانتشار الخلفي بكفاءة عالية، وكذلك لحساب حالات التدرج. لنتعرف على كيفية قيامك بذلك في الفيديو التالي.