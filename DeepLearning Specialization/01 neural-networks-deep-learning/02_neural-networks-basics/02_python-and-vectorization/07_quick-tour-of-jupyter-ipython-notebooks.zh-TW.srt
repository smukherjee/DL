1
00:00:00,000 --> 00:00:02,070
有了您所學的一切

2
00:00:02,070 --> 00:00:04,745
您正準備好要迎戰您的第一個程式任務

3
00:00:04,745 --> 00:00:10,130
在您做之前
讓我您快速導覽 ipyhon notebook 在 Coursera

4
00:00:10,130 --> 00:00:14,545
這個就是 Jupyter ipython notebook
您可以從 Coursera 進入

5
00:00:14,545 --> 00:00:17,520
讓我很快地展示一些功能

6
00:00:17,520 --> 00:00:21,885
這個指導寫在 iPython notebook 的文字裡

7
00:00:21,885 --> 00:00:25,460
而這個長長的淡灰色區塊是程式區塊

8
00:00:25,460 --> 00:00:27,030
偶而您會看到

9
00:00:27,030 --> 00:00:29,255
這些區塊有時候我會說
 'START CODE HERE' 跟 'END CODE HERE'

10
00:00:29,255 --> 00:00:31,860
做您的練習時請確認

11
00:00:31,860 --> 00:00:36,755
將您的程式寫在 
'START CODE HERE' 跟 'END CODE HERE' 中間

12
00:00:36,755 --> 00:00:41,485
舉個例子
列印 'Hello world'

13
00:00:41,485 --> 00:00:44,085
然後執行一個程式區塊

14
00:00:44,085 --> 00:00:49,355
您可以按 shift+enter 來執行這段程式區塊

15
00:00:49,355 --> 00:00:51,265
我猜我們只是列印  'Hello world'

16
00:00:51,265 --> 00:00:53,355
所以會列印 Hello world

17
00:00:53,355 --> 00:00:55,140
要執行一個儲存格

18
00:00:55,140 --> 00:00:56,940
您也可以執行一個程式區塊的儲存格

19
00:00:56,940 --> 00:01:01,200
您可以點擊 Cell
然後選 Run Cells 來執行

20
00:01:01,200 --> 00:01:05,275
有可能在您的電腦上

21
00:01:05,275 --> 00:01:07,364
鍵盤上的捷徑對於

22
00:01:07,364 --> 00:01:09,105
Cell, Run Cells 也許不同於 shift+enter

23
00:01:09,105 --> 00:01:14,070
但我的 Mac 跟我的 PC 都是使用 shift+enter

24
00:01:14,070 --> 00:01:16,550
也許跟您的一樣

25
00:01:16,550 --> 00:01:18,480
當您讀這些指導時

26
00:01:18,480 --> 00:01:20,960
如果您不小心雙擊它

27
00:01:20,960 --> 00:01:24,270
您可能會看到這個 markdown 語言

28
00:01:24,270 --> 00:01:26,700
如果您看到這種有趣的文字

29
00:01:26,700 --> 00:01:30,390
要轉回原來好看的文字
只要執行這個儲存格

30
00:01:30,390 --> 00:01:34,740
您可以點擊 Cell
 Run Cells 或者按 shift+enter 執行

31
00:01:34,740 --> 00:01:39,630
基本上會執行者這個 markdown 
轉回去原來好看的文字

32
00:01:39,630 --> 00:01:41,565
再來一些提示

33
00:01:41,565 --> 00:01:43,795
當您執行一些程式像這樣

34
00:01:43,795 --> 00:01:48,333
它實際上是在核心 (Kernel) 上跑

35
00:01:48,333 --> 00:01:51,947
一小段的程式
在伺服器上跑

36
00:01:51,947 --> 00:01:54,900
如果您執行一個很大的程式或者

37
00:01:54,900 --> 00:01:59,121
離開電腦很久
或出現一些問題

38
00:01:59,121 --> 00:02:00,505
您網路的連接出問題等等

39
00:02:00,505 --> 00:02:03,160
有很小的機會
在後端的核心會死掉

40
00:02:03,160 --> 00:02:06,690
在這種情況下, 請點擊 Kernel 
然後按 restart kernel

41
00:02:06,690 --> 00:02:10,415
希望這樣會重新啟動 kernel 讓它重回工作

42
00:02:10,415 --> 00:02:13,080
這不應該會發生在
如果您只是跑一段

43
00:02:13,080 --> 00:02:16,858
相對小的程式而您只是
剛開始打開 ipython notebook

44
00:02:16,858 --> 00:02:19,995
如果您看到一個錯誤訊息說
 Kernel 已經死了或者類似的

45
00:02:19,995 --> 00:02:21,310
您可以試 Kernel, Restart

46
00:02:21,310 --> 00:02:25,362
最後在 iPython notebook

47
00:02:25,362 --> 00:02:27,845
像這樣也許有多個程式區塊

48
00:02:27,845 --> 00:02:33,255
即使如果前面的程式區塊
並沒有產生任何程式

49
00:02:33,255 --> 00:02:35,550
請先確定執行
這些程式區塊

50
00:02:35,550 --> 00:02:39,698
在這個例子,它導入了 numpy as np 等等

51
00:02:39,698 --> 00:02:42,360
然後設定一些變數
您或許需要它們

52
00:02:42,360 --> 00:02:45,570
為了執行後面的程式區塊

53
00:02:45,570 --> 00:02:50,845
所以請先執行前面這些區塊即使
您沒有被要求寫任何程式在這些區塊上

54
00:02:50,845 --> 00:02:53,705
最後, 當您做完建置您的答案後

55
00:02:53,705 --> 00:02:57,920
這裡有一個藍色 'submit assignment' 
按鈕在右上方

56
00:02:57,920 --> 00:03:02,130
點擊它來提交
您的答案來給分

57
00:03:02,130 --> 00:03:05,520
我發現這種互動式指令的

58
00:03:05,520 --> 00:03:09,008
ipython notebook 方式很有用
對於快速學習

59
00:03:09,008 --> 00:03:10,520
建置幾行程式

60
00:03:10,520 --> 00:03:13,450
看一下結果, 學習很快速

61
00:03:13,450 --> 00:03:17,430
我希望從 Coursera 的練習中

62
00:03:17,430 --> 00:03:20,775
Jupyter iPython notebook 
會幫助您快速學習

63
00:03:20,775 --> 00:03:24,535
跟實驗看看如何去
建置這些演算法

64
00:03:24,535 --> 00:03:26,325
下面還有一段影片

65
00:03:26,325 --> 00:03:28,695
這是一個可選的影片
談論有關

66
00:03:28,695 --> 00:03:32,210
羅吉斯迴歸分析成本函數, 
您可以看, 可以不看

67
00:03:32,210 --> 00:03:33,745
兩種皆可

68
00:03:33,745 --> 00:03:38,140
但不管如何，祝您
在第二週的程式作業好運

69
00:03:38,140 --> 00:03:42,720
我期待見到您
在第三週的課程