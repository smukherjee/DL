टर्म डीप लर्निंग का मतलब है ट्रेन करना 
न्यूरल नेटवर्क्स को कई बार बहुत बड़े न्यूरल नेटवर्क को. तो क्या है वास्तव में एक न्यूरल नेटवर्क? इस वीडियो में, चलो आप को एक मूल 
अनुभव देने की कोशिश करते हैं. चलो शुरू करते हैं घर की क़ीमत प्रिडिक्ट करने के उदाहरण से. मान लो आपके पास है एक डेटा सेट छः घरों का, 
तो आप जानते हैं साइज़ घरों का स्क्वेर फ़ीट या स्क्वेर मीटर में और आप जानते हैं 
क़ीमत घर की और आप चाहते हैं फ़िट करना एक फ़ंक्शन प्रिडिक्ट करने के
 लिए क़ीमत घरों की, जो साइज़ का फ़ंक्शन है. तो यदि आप परिचित हैं लिनीअर रेग्रेशन से 
आप शायद कहें, ठीक है, चलो डालते हैं एक सीधी लाइन इस डेटा में तो 
और हमें मिलती है एक लाइन उस तरह की. लेकिन जानते हुए, आप शायद कहें ठीक है 
हम जानते हैं कि क़ीमतें कभी नेगेटिव नहीं हो सकती, ठीक है. तो बजाय सीधी लाइन फ़िट के, 
जो अन्तत: नेगेटिव हो जाएगी, चलो थोड़ा मोड़ देते हैं कर्व को यहाँ. तो यह हो जाता है ज़ीरो यहाँ. तो यह मोटी लाइन यहाँ बन जाती है 
आपका फ़ंक्शन करने के लिए प्रिडिक्ट क़ीमत घर की जो है फ़ंक्शन इस साइज़ का. जबकि ज़ीरो यहाँ और फिर वहाँ है एक सीधी लाइन है 
फ़िट की हुई दाईं तरफ़. तो आप सोच सकते है इस फ़ंक्शन को जो अपने 
अभी फ़िट किया है घर कि क़ीमत के लिए एक बहुत सरल न्यूरल नेटवर्क की तरह. यह लगभग उतना सरल है जितना सम्भव 
न्यूरल नेटवर्क हो सकता है. चलो मैं बनाता हूँ यहाँ. हमारे पास है न्यूरल नेटवर्क को इनपुट 
साइज़ एक घर का जिसे हमें कहँगे x. यह जाता है इस नोड में, यह छोटा वृत्त और फिर यह आउट्पुट करता है क़ीमत जिसे हम कहते हैं y. तो यह छोटा वृत्त, जो है एक अकेला न्यूरॉन 
एक न्यूरल नेटवर्क में, जो इम्प्लमेंट करता है इस फ़ंक्शन को जो हमने बनाया बाईं तरफ़. और न्यूरॉन सिर्फ़ इनपुट करता है साइज़, कम्प्यूट करता है 
यह लिनीअर फ़ंक्शन, लेता है अधिकतम शून्य का और फिर 
आउट्पुट करता है अनुमानित क़ीमत. और वैसे तो न्यूरल नेटवर्क साहित्य में, 
आप देखेंगे यह फ़ंक्शन बहुत बार. यह फ़ंक्शन जो होता है ज़ीरो कभी और फिर यह बनेगा एक सीधी रेखा. इस फ़ंक्शन को कहते हैं एक RELU फ़ंक्शन 
जिसका मतलब है रेक्टिफ़ायड लिनीअर यूनिट्स. इसलिए, R-E-L-U. और रेक्टिफ़ाई का सिर्फ़ मतलब है लेना अधिकतम 0 
जिस वजह से आपको मिलता है 
एक फ़ंक्शन का आकार इस तरह का. आपको RELU यूनिट्स के बारे में चिंता करने की जरूरत नहीं है अभी लेकिन यह है सिर्फ़ कुछ जो आप 
देखेंगे बाद में इस कोर्स में. तो यदि यह है एक अकेला न्यूरॉन, न्यूरल नेटवर्क, वास्तव में एक बहुत छोटा न्यूरल नेटवर्क, 
एक इससे बड़ा न्यूरल नेटवर्क तब बनता है लेने से बहुत से पृथक न्यूरॉन्स 
और स्टैक करने से उन्हें एक साथ. तो, यदि आप सोचते हैं इस न्यूरॉन को एक अकेली 
लेग़ो ब्रिक जैसे, आपको फिर मिलता है एक बड़ा न्यूरल नेटवर्क स्टैक करने 
से बहुत सी ये लेग़ो ब्रिक्स. आइये एक उदाहरण देखते हैं. मान लो बजाय करने के प्रिडिक्ट 
एक घर की क़ीमत सिर्फ़ साइज़ से, अब आपके पास हैं अन्य फ़ीचर्ज़ आप जानते हैं अन्य चीज़ें घर के बारे में, 
जैसे संख्या बेडरूम की, मुझे लिखना चाहिए बेडरूम्स, और आप 
शायद सोचें कि एक चीज़ जो वास्तव में प्रभावित करती है क़ीमत एक घर 
की वह है परिवार का साइज़, सही है? तो क्या यह घर पूरा है आपके तीन के परिवार के लिए, 
चार के परिवार या पाँच के परिवार के लिए? और यह वास्तव में आधारित है साइज़ पर 
स्क्वेर फ़ीट या स्क्वेर मीटर में और बेडरूम की संख्या जो निर्धारित करता है कि क्या एक घर फ़िट कर सकता है आपके परिवार के 
साइज़ को या नहीं. और फिर आप जानते हैं शायद ज़िप कोड. विभिन्न देशों में इसे कहते हैं पोस्टल कोड एक घर का. और ज़िप कोड शायद एक फ़ीचर की तरह बताता है 
आपको, चलने की योग्यता? तो क्या यह पड़ोस बहुत अधिक चलने योग्य है? क्या किराने की दुकान पर चल कर जा सकते हैं? स्कूल तक पैदल? क्या आपको ड्राइव करने की आवश्यकता है? और कुछ लोग अत्यधिक चलने लायक पड़ोस पसंद करते हैं. और फिर ज़िप कोड तथा आर्थिक स्थिति
 शायद बताए आपको, ठीक है? निश्चित रूप से संयुक्त राज्य अमेरिका में, 
लेकिन कुछ अन्य देशों में भी. आपको बताता है कि स्कूल की गुणवत्ता कितनी अच्छी है. तो प्रत्येक ये छोटे वृत्त मैं बना रहा हूँ, हो सकते हैं वे RELU, रेक्टिफ़ायड लिनीअर यूनिट्स या कोई अन्य
 थोड़ा नॉन-लिनीअर फ़ंक्शन. ताकि साइज़ और बेडरूम की संख्या पर निर्भर करते हुए, आप अनुमान कर सकते हैं परिवार का साइज़, 
उनका ज़िप कोड, निर्भर करते हुए 
चलने योग्यता पर, ज़िप कोड और आर्थिक स्थिति के आधार पर स्कूल 
की गुणवत्ता का अनुमान कर सकते हैं. और फिर अंत में आपको लगता है कि ठीक है 
जिस तरह लोग निर्णय करते हैं कि कितना वे अदा करेंगे एक घर के लिए, है कि वे देखते हैं 
चीज़ों को जिनसे उन्हें फ़र्क़ पड़ता है. इस केस में परिवार का साइज़, पैदल चलने योग्य और 
स्कूल की गुणवत्ता और जो मदद करती है आपको 
प्रिडिक्ट करने में क़ीमत. तो उदाहरण में x है ये सब चार इन्पुट्स. और y है क़ीमत जो आप प्रिडिक्ट 
करना चाह रहे हैं. और स्टैक करके एस साथ कुछ पृथक न्यूरॉन्स 
या पृथक प्रिडिक्टर्स हमारे पास थे पिछली स्लाइड से, 
हमारे पास अब है थोड़ा बड़ा न्यूरल नेटवर्क. कैसे आप मैनिज करते हैं न्यूरल नेटवर्क को है 
कि जब आप इसे इम्प्लमेंट करते हैं, आपको देना होता है इसे सिर्फ़ इनपुट x और आउट्पुट y बहुत से इग्ज़ाम्पल्ज़ के लिए 
आपके ट्रेनिंग सेट में और ये सब चीज़ें मध्य में, वे अपने आप समझ लेते हैं. तो आप वास्तव में जो इम्प्लमेंट
 करते हैं वह यह है. जहाँ, यहाँ, आपके पास है 
एक न्यूरल नेटवर्क चार इन्पुट्स का. तो इनपुट फ़ीचर्ज़ हो सकते हैं 
साइज़ और बेडरूम की संख्या, ज़िप कोड या पोस्टल कोड, 
और पड़ोस की आर्थिक स्थिति. और इसलिए दिए होने पर ये इनपुट फ़ीचर्ज़, न्यूरल नेटवर्क का काम होगा 
प्रिडिक्ट करना क़ीमत y. और ध्यान दें कि प्रत्येक ये वृत्त भी, 
इन्हें कहते हैं हिडन यूनिट्स न्यूरल नेटवर्क में, कि प्रत्येक उनमें से लेता है 
उसकी इनपुट सभी इनपुट फ़ीचर्ज़. तो उदाहरण के लिए, बजाय कहने के कि ये 
पहले नोड्ज़ दर्शाते हैं परिवार का साइज़ और परिवार का साइज़ निर्भर करता हैं 
सिर्फ़ फ़ीचर x1 और x2 पर. इसके बजाय, हम कहेंगे, 
ठीक है न्यूरल नेटवर्क, आप तय करो जो भी आप 
चाहते हो यह होना चाहिए. और हम देंगे आपको सारे चार फ़ीचर्ज़ 
पूरा करने के लिए जो भी आप चाहते हो. तो हम कहते हैं कि लेयर्स कि 
यह है इनपुट लेयर और यह लेयर मध्य में न्यूरल नेटवर्क के है 
घने रूप से जुड़ी हुई. क्योंकि प्रत्येक इनपुट फ़ीचर जुड़ा है प्रत्येक इन वृत्तों से मध्य में. और उल्लेखनीय बात न्यूरल नेटवर्क की है कि,
 दिया होने पर पर्याप्त डेटा x और y, दिया होने पर पर्याप्त ट्रेनिंग इग्ज़ाम्पल्ज़ 
दोनो x और y के साथ, न्यूरल नेटवर्क्स है उल्लेखनीय रूप से बढ़िया समझने में 
फ़ंक्शनस जो सही रूप से मैप करते हैं x से y तक. तो वह है एक मूल न्यूरल नेटवर्क. ऐसा होता है जब आप बनाते हैं आपके अपने न्यूरल नेटवर्क्स, आप शायद पाएँ उन्हें सबसे अधिक उपयोगी, 
सबसे अधिक प्रभावशाली सूपर्वायज़्ड लर्निंग सेट्टिंग में, मतलब कि आप 
प्रयास कर रहे हैं लेने का एक इनपुट x और मैप करने का इसे किसी आउट्पुट y से, 
जैसे कि हमने देखा घर की क़ीमत प्रिडिक्ट 
करने के उदाहरण में. अगले वीडियो में चलो देखते हैं कुछ और 
उदाहरण सूपर्वायज़्ड लर्निंग के और कुछ उदाहरण जहाँ आप शायद पाएँ आपके 
नेटवर्क्स अविश्वसनीय रूप से उपयोगी आपकी ऐप्लिकेशन्स के लिए भी.