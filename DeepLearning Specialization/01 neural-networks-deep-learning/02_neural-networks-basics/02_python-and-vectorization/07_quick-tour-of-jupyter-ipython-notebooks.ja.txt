これまで学習したことを使って 最初のプログラムアサインメントを
実施できる準備がほとんど整いました 実施する前にCoursera の
IPython Notebook を紹介します これがCoursera で使用する
Jupyter IPython Notebook です これの機能を少し
簡単に紹介します このように指示はNotebook のテキスト部分に
書かれています このように薄い灰色の四角部分は
コードが書かれる箇所です このような START CODE HERE、END CODE HEREと
書かれたコードのブロックがあります 演習を行うときはコードを START CODE HERE とEND CODE HERE との間に
書くようにしてください 例えばprint("Hello world")と書いて コードを実行するときには shift+enter を押します
そうするとこの部分のコードが実行されます たった今書いた
Hello world のprintが 実行されました この コードブロックのセルの実行には メニューからCell、Run Cells を
選んでも実行できます もしかすると
あなたのコンピューターでは セルの実行をする
キーボードのショートカットは shift+enterとは
異なるかもしれませんが 私のMac もPC も
shift+enterです このため多分同じだと思います もし指示を読んでいるときに
間違ってダブルクリックをしてしまい ダブルクリックをしてしまいマークダウン言語表示になってしまったら
このおかしなテキストを
きちんとしたテキストに戻すにはセルを実行すればよいです マークダウン言語が実行され
元のきちんとしたテキストに戻ります 他にも何点か紹介します きちんとしたテキストに戻すには
セルを実行すればよいです メニューでCell、Run Cells 選ぶか
shift+enter を押すと マークダウン言語が実行され
元のきちんとしたテキストに戻ります 他にも何点か紹介します このようなコードを実行すると 実際にはカーネルで実行されます その部分のコードがサーバーで実行されます
もし非常に長い時間のかかるジョブやコンピューターから長い時間離れる時や インターネット接続で何かが起こってバックエンドのカーネルが停止することがありえます
その場合Kernel、Restart を選ぶとカーネルが再起動され 再度動く状態になると思います
小さなジョブを実行している時には起こるべきではないものです インターネット接続で何かが起こって バックエンドのカーネルが停止することがありえます その場合Kernel、Restart を選ぶと カーネルが再起動され
再度動く状態になると思います このIPython Notebook のように 小さなジョブを実行している時や
IPython Notebook を起動した時には起こるべきではないものです このあたりにKernrl has diedのような
メッセージを見かけた時には メニューからKernel、Restart を試してください 最後に このIPython Notebook のように 何個ものコードのブロックがあるものあります もし先行するブロックのコードに
提出する部分がない場合でも 必ず実行してください なぜならこの例なら
import numpy as np や 後続のコードのブロック処理実行に 必要な変数を設定したりします コードを書く指示がないブロックでも
必ず実行するようにしてください 最後に解答を実装し終わったら 右上の青色の「Submit Assignment」ボタンを
押してください こうすると演習の解答が
評価用に提出されます IPython Notebook の
インタラクティブ・コマンドシェルの性質は 非常に役に立ちます
数行のコードを実装後 すぐに実行し結果を見て 迅速に学ぶことができます このCoursera のJupyter
IPython Notebook での演習から 素早く学び実験して どのように機械学習用のアルゴリズムを実装するのかを
学ぶのに役立てばと思います ３週目の最初のコースで このビデオの後に
任意で見ればよいビデオがあります これではロジステック回帰のコスト関数を説明します 見ても見なくても
全く構いません どちらでも２週目のプログラム演習が
うまく行くように願っています ３週目の最初のビデオで
また会えるのを楽しみにしています