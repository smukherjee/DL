1
00:00:00,510 --> 00:00:01,280
上个视频中

2
00:00:01,280 --> 00:00:06,130
我们看了一个使用计算图来计算函数J的例子

3
00:00:06,130 --> 00:00:09,311
现在 让我们用一个简明的例子

4
00:00:09,311 --> 00:00:13,990
说明如何用计算图来计算函数J

5
00:00:13,990 --> 00:00:15,252
的导数

6
00:00:15,252 --> 00:00:17,292
这是一个计算图

7
00:00:17,292 --> 00:00:22,280
比方说你想计算J对于v的导数

8
00:00:23,440 --> 00:00:24,126
它等于多少呢

9
00:00:24,126 --> 00:00:27,800
也就是说 如果我们把v的值

10
00:00:27,800 --> 00:00:32,360
改变一点点 J的值将会如何变化呢？

11
00:00:32,360 --> 00:00:37,553
J被定义为3乘以v

12
00:00:37,553 --> 00:00:42,895
现在v等于11

13
00:00:42,895 --> 00:00:48,348
因此如果我们把v提高一点点到11.001

14
00:00:48,348 --> 00:00:52,524
那么J就从目前的33

15
00:00:52,524 --> 00:00:56,130
提高到33.003

16
00:00:56,130 --> 00:00:59,123
这里我们把v提高0.001

17
00:00:59,123 --> 00:01:03,640
结果J增加了3个0.001

18
00:01:03,640 --> 00:01:08,099
因此J对v的导数等于3

19
00:01:08,099 --> 00:01:12,590
因为J的增量是v增量的3倍

20
00:01:12,590 --> 00:01:18,221
事实上 这和我们之前视频的例子很相似

21
00:01:18,221 --> 00:01:24,670
之前的视频中 f(a)=3a

22
00:01:24,670 --> 00:01:30,765
我们推导得到一个简化的df/da

23
00:01:30,765 --> 00:01:36,740
我们采用不那么严谨的写法 df/da=3

24
00:01:36,740 --> 00:01:41,829
回到我们现在的例子，我们有J=3v

25
00:01:41,829 --> 00:01:44,825
所以 dJ/dv=3

26
00:01:44,825 --> 00:01:51,713
这里J的作用相当于之前例子里的f

27
00:01:51,713 --> 00:01:58,323
而v相当于a

28
00:01:58,323 --> 00:02:03,595
用反向传播这个术语来解释的话

29
00:02:03,595 --> 00:02:09,617
如果你想要计算最终输出变量对于v的导数

30
00:02:09,617 --> 00:02:13,475
而这也是你通常最关心的变量

31
00:02:13,475 --> 00:02:18,790
这就是一步反向传播

32
00:02:18,790 --> 00:02:22,240
我们把这个过程叫做图中的一步反向传播

33
00:02:22,240 --> 00:02:24,280
现在我们来看另一个例子

34
00:02:24,280 --> 00:02:28,180
dJ/da是什么

35
00:02:28,180 --> 00:02:33,670
换句话说 如果我们增大一点a的值
J的值会如何变化呢

36
00:02:35,420 --> 00:02:39,965
让我们仔细看一下这个例子，现在a=5

37
00:02:39,965 --> 00:02:42,850
我们把它增大到5.001

38
00:02:42,850 --> 00:02:48,790
那么对于v的影响，注意到v=a+u，原来是11

39
00:02:48,790 --> 00:02:52,359
现在增加到11.001

40
00:02:52,359 --> 00:02:57,224
正如我们在之前的例子中看到的那样

41
00:02:57,224 --> 00:03:01,672
J现在从33增加到33.003

42
00:03:01,672 --> 00:03:07,591
我们看到如果a增加0.001 J会增加0.003

43
00:03:07,591 --> 00:03:11,751
刚才我说的增大a的意思是 在原来值为5的基础上

44
00:03:11,751 --> 00:03:14,100
再加一个新的值

45
00:03:14,100 --> 00:03:17,954
那么a的变化会在计算图中向右传播

46
00:03:17,954 --> 00:03:19,832
结果J变成了33.003

47
00:03:19,832 --> 00:03:28,110
因此J增量是a增量的3倍

48
00:03:28,110 --> 00:03:31,520
这意味着J对a的导数为3

49
00:03:31,520 --> 00:03:37,400
我们来分解一下这个过程 如果你改变了a

50
00:03:37,400 --> 00:03:38,910
v也会随之改变

51
00:03:40,130 --> 00:03:43,967
v改变了 J也会改变

52
00:03:43,967 --> 00:03:49,554
所以当你增大a时的时候J的改变量

53
00:03:49,554 --> 00:03:54,313
也就是说当你将a的值改变一点点的时候

54
00:03:57,699 --> 00:04:02,561
首先 因为a有变化所以v也随之变化

55
00:04:02,561 --> 00:04:05,850
v的值增加多少呢

56
00:04:05,850 --> 00:04:11,709
v的增加量取决于dv/da

57
00:04:11,709 --> 00:04:19,802
然后v的改变使得J的值也改变了

58
00:04:19,802 --> 00:04:27,064
在微积分中这叫做链式法则 a影响v

59
00:04:27,064 --> 00:04:32,023
v影响J 然后当你改变a的时候J的改变量等于

60
00:04:32,023 --> 00:04:36,866
改变a时v的改变量乘以

61
00:04:36,866 --> 00:04:42,165
改变v时J的改变量

62
00:04:42,165 --> 00:04:46,225
再强调一下 在微积分中 这叫做链式法则

63
00:04:46,225 --> 00:04:52,140
我们从这个例子中可以看到如果a增加0.001

64
00:04:52,140 --> 00:04:55,250
v也变大了0.001

65
00:04:55,250 --> 00:04:59,650
因此dv/da=1

66
00:04:59,650 --> 00:05:07,774
事实上 如果把之前的式子代入

67
00:05:07,774 --> 00:05:11,700
dv/dJ=3 dv/da=1

68
00:05:11,700 --> 00:05:14,160
乘积是3乘1

69
00:05:14,160 --> 00:05:18,350
我们得到dJ/da正确答案是3

70
00:05:18,350 --> 00:05:24,963
这个小例子展示了如何通过计算dJ/dv

71
00:05:24,963 --> 00:05:30,183
即J关于v的导数

72
00:05:30,183 --> 00:05:34,030
来帮助你计算dJ/da

73
00:05:34,030 --> 00:05:37,270
这是反向传播的另一步

74
00:05:39,900 --> 00:05:44,115
接下来我要介绍另一种符号惯例

75
00:05:44,115 --> 00:05:50,005
当你写反向传播代码的时候

76
00:05:50,005 --> 00:05:54,675
那些你真正关心的

77
00:05:54,675 --> 00:06:01,065
或者你想优化的最终输出变量

78
00:06:01,065 --> 00:06:04,100
在这个例子里 最终输出变量是J

79
00:06:04,100 --> 00:06:07,460
也就是计算图中的最后一个节点

80
00:06:07,460 --> 00:06:11,870
因此你会做许多关于

81
00:06:11,870 --> 00:06:13,343
最终输出变量的导数的计算

82
00:06:13,343 --> 00:06:17,100
即这个FinalOutputVar(最终输出变量)对于其他变量

83
00:06:17,100 --> 00:06:23,319
我们就叫它dvar

84
00:06:23,319 --> 00:06:27,909
你会需要计算做许多关于最终输出变量导数的计算

85
00:06:27,909 --> 00:06:32,164
在这个例子中是J 这会牵涉到许多中间变量

86
00:06:32,164 --> 00:06:34,520
例如a b c u v

87
00:06:34,520 --> 00:06:41,280
当你在程序中实现的时候 你给这些变量取什么名字呢

88
00:06:41,280 --> 00:06:44,208
在Python中

89
00:06:44,208 --> 00:06:50,280
你可以起一个很长的名字
比如dFinalOutputVar/dvar

90
00:06:50,280 --> 00:06:51,766
但这是一个很长的变量名

91
00:06:51,766 --> 00:06:55,018
你可以把这叫做dJdvar

92
00:06:55,018 --> 00:06:58,929
但因为导数都是关于最终输出变量J的

93
00:06:58,929 --> 00:07:03,173
我想引入一种新的记号

94
00:07:03,173 --> 00:07:09,635
当你在代码中计算这个导数的时候

95
00:07:09,635 --> 00:07:16,936
我们就用变量名dvar来代表这个值

96
00:07:16,936 --> 00:07:21,459
所以dvar在你的代码里就代表

97
00:07:21,459 --> 00:07:25,444
最终输出变量 比如J对它的导数

98
00:07:25,444 --> 00:07:29,938
有时候 对于各种中间量的损失

99
00:07:29,938 --> 00:07:31,795
在你代码的计算中

100
00:07:31,795 --> 00:07:38,380
用dv来代表这个值

101
00:07:38,380 --> 00:07:42,453
dv=3

102
00:07:42,453 --> 00:07:46,635
在代码里 你用da代表这个值

103
00:07:46,635 --> 00:07:51,185
da也等于3

104
00:07:51,185 --> 00:07:58,018
通过这个计算图 我们介绍了一部分反向传播的知识

105
00:07:58,018 --> 00:08:02,130
我们将在下一张幻灯片中继续这个例子

106
00:08:02,130 --> 00:08:06,293
让我们换一张干净的图

107
00:08:06,293 --> 00:08:09,846
让我们回顾一下

108
00:08:09,846 --> 00:08:14,743
我们通过反向运算得到dv=3

109
00:08:14,743 --> 00:08:18,783
dv只是一个变量名

110
00:08:18,783 --> 00:08:20,844
它代表的其实是dJ/dv

111
00:08:20,844 --> 00:08:24,303
我们已经计算出da=3

112
00:08:24,303 --> 00:08:30,470
同样da也是dJ/da在代码中的变量名

113
00:08:32,332 --> 00:08:39,410
我们推演了反向传播是如何在这两条边上实现的

114
00:08:39,410 --> 00:08:41,262
现在让我们继续计算导数

115
00:08:41,262 --> 00:08:44,129
现在看u的值

116
00:08:44,129 --> 00:08:47,473
dJ/du是什么

117
00:08:47,473 --> 00:08:52,153
我们来做一个跟之前类似的计算

118
00:08:52,153 --> 00:08:54,430
从u=6开始

119
00:08:54,430 --> 00:08:57,913
如果u从6变成6.001 那么v

120
00:08:57,913 --> 00:09:02,700
原来是11 变成了11.001

121
00:09:02,700 --> 00:09:07,978
J原来是33 变成了33.003

122
00:09:07,978 --> 00:09:12,190
因此J增加了3倍u增加的量

123
00:09:12,190 --> 00:09:16,760
关于u的分析与对a的分析非常相像

124
00:09:16,760 --> 00:09:23,884
用dJ/dv乘以dv/du可以算出来

125
00:09:23,884 --> 00:09:30,186
这一项dJ/dv我们已经算出来是3

126
00:09:30,186 --> 00:09:33,800
这一项dv/du可以算出是1

127
00:09:33,800 --> 00:09:36,950
所以我们又完成了一步反向传播

128
00:09:36,950 --> 00:09:42,920
我们得出了du也等于3的结论

129
00:09:42,920 --> 00:09:47,240
当然du指的是dJ/du

130
00:09:47,240 --> 00:09:51,570
我们再来仔细的计算最后一个例子

131
00:09:51,570 --> 00:09:54,137
dJ/db是什么

132
00:09:54,137 --> 00:09:57,255
想一想如果你能改变b的值

133
00:09:57,255 --> 00:10:01,585
你想通过改变b的值来最小化

134
00:10:01,585 --> 00:10:04,040
或者最大化J的值

135
00:10:04,040 --> 00:10:05,340
那么dJ/db这个导数

136
00:10:05,340 --> 00:10:10,860
或者说当你稍微改变b的值 函数J的斜率是多少呢

137
00:10:11,880 --> 00:10:15,257
使用链式法则来计算

138
00:10:15,257 --> 00:10:18,416
dJ/db可以写成两项相乘

139
00:10:18,416 --> 00:10:24,720
dJ/du乘上du/db

140
00:10:24,720 --> 00:10:30,390
原因是如果你稍稍改变b的值

141
00:10:30,390 --> 00:10:34,275
b从3变成3.001

142
00:10:34,275 --> 00:10:38,041
b首先改变u

143
00:10:38,041 --> 00:10:40,120
那么它会对u产生多大影响呢

144
00:10:40,120 --> 00:10:44,100
u被定义为b乘c

145
00:10:44,100 --> 00:10:48,073
u一开始是6

146
00:10:48,073 --> 00:10:53,238
当b=3时 u变成6.002

147
00:10:53,238 --> 00:10:59,560
因为在我们的例子中c=2

148
00:10:59,560 --> 00:11:05,150
这告诉我们du/db=2

149
00:11:05,150 --> 00:11:10,490
当你把b增加0.001时 u增加两倍也就是0.002

150
00:11:10,490 --> 00:11:15,360
因此du/db=2

151
00:11:15,360 --> 00:11:21,430
现在我们知道u的变化是b的变化的2倍

152
00:11:21,430 --> 00:11:24,460
那么dJ/du是什么

153
00:11:24,460 --> 00:11:27,447
我们已经算出了这等于3

154
00:11:27,447 --> 00:11:32,850
因此把这两项乘起来我们得到dJ/db=6

155
00:11:32,850 --> 00:11:36,274
重复一下这个推导过程的第二部分

156
00:11:36,274 --> 00:11:43,370
我们想知道当u增加了0.002的时候 J怎样变化

157
00:11:43,370 --> 00:11:48,746
dJ/du=3告诉我们

158
00:11:48,746 --> 00:11:54,310
当u增加0.002时 J应该增加这个数值的3倍

159
00:11:54,310 --> 00:11:59,943
因此J应该增加0.006

160
00:11:59,943 --> 00:12:05,670
这是因为dJ/du=3

161
00:12:05,670 --> 00:12:09,351
如果举例计算一下

162
00:12:09,351 --> 00:12:13,891
你会发现如果b变成3.001

163
00:12:13,891 --> 00:12:20,190
那么u变成6.002 v变成11.002

164
00:12:20,190 --> 00:12:24,064
这是a+u 也就是5+u

165
00:12:24,064 --> 00:12:28,450
然后J等于3倍的v

166
00:12:28,450 --> 00:12:33,101
结果就是33.006

167
00:12:33,101 --> 00:12:37,695
以上就是你推导出dJ/db=6的过程

168
00:12:37,695 --> 00:12:43,738
当我们反向传播的时候 这里是db=6

169
00:12:43,738 --> 00:12:50,347
db是python中dJ/db的变量名

170
00:12:50,347 --> 00:12:53,565
最后一个例子我就不详细说了

171
00:12:53,565 --> 00:13:00,423
但如果你也算出dJ

172
00:13:00,423 --> 00:13:05,748
这一项是dJ/du乘du

173
00:13:05,748 --> 00:13:09,987
结果是9 也就是3乘3

174
00:13:09,987 --> 00:13:11,950
这个例子我就不细讲了

175
00:13:11,950 --> 00:13:18,720
通过最后一步 我们可以算出dc=9

176
00:13:20,060 --> 00:13:24,634
这个视频 这个例子里最重要的东西是

177
00:13:24,634 --> 00:13:29,347
当在计算导数的时候
最有效率的方式

178
00:13:29,347 --> 00:13:34,221
是按红色箭头方向从右往左

179
00:13:34,221 --> 00:13:37,780
特别的 我们先计算对v的导数

180
00:13:37,780 --> 00:13:40,530
计算得到的结果

181
00:13:40,530 --> 00:13:45,410
对于计算J对a的导数和J对u的导数很有用

182
00:13:45,410 --> 00:13:48,070
然后J对u的导数

183
00:13:48,070 --> 00:13:52,020
这一项和这一项

184
00:13:52,020 --> 00:13:55,430
对于计算J对b的导数

185
00:13:55,430 --> 00:13:57,610
和J对c的导数都有用

186
00:13:57,610 --> 00:14:02,370
这就是计算图以及前向
或者说从左到右

187
00:14:02,370 --> 00:14:07,620
计算代价函数
比如你想优化的J

188
00:14:07,620 --> 00:14:12,940
以及如何反向或从右到左计算导数

189
00:14:12,940 --> 00:14:15,422
如果你对微积分或者链式法则不熟悉

190
00:14:15,422 --> 00:14:18,382
我知道有些细节可能过得很快

191
00:14:18,382 --> 00:14:21,500
如果你没有跟上这些细节 别担心

192
00:14:21,500 --> 00:14:22,567
这里这个

193
00:14:22,567 --> 00:14:26,251
我们会在讲解逻辑回归时
再次复习这个视频中的内容

194
00:14:26,251 --> 00:14:30,337
并且展示你要怎样实现一个计算图

195
00:14:30,337 --> 00:14:33,780
在逻辑回归模型中计算导数
GTC字幕组 翻译