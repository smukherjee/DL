في فيديو سابق، رأيتم كيفية حساب المشتقات وتطبيق الانحدار التدريجي مع مراعاة
مثال تدريبي واحد للانحدار اللوجستي. الآن نريد تنفيذ ذلك للأمثلة التدريبية m. للبدء، دعونا نذكر أنفسنا بتعريف دالة التكلفة J. دالة التكلفة w,b التي تهتم بها هي هذا المتوسط، واحد على مجموع m من
i يساوي واحد من خلال m من الخسارة عندما تكون مخرجات
الخوارزمية a_i في المثال y، حيث a_i هي التنبؤ الخاص بمثال
تدريب ith وهو سيجما z_i، وهو ما يساوي سيجما w منقول x_i‎ زائد b. لذا، فإن ما عرضناه في الشريحة
السابقة هو لأي مثال تدريبي واحد، كيفية حساب المشتقات عندما يكون
لديكم مثال تدريبي واحد فقط. لذا dw_1 وdw_2 وd_b، مع حرف i المرتفع للإشارة إلى القيم المناظرة التي تحصلون عليها إذا كنتم
تفعلون ما فعلناه في الشريحة السابقة، ولكن الاكتفاء باستخدام المثال التدريبي الواحد، x_i y_i، عفوًا مع نسيان i هناك أيضًا. لذا، الآن تلاحظون دوال التكلفة الإجمالية
كمجموع كانت تمثل المتوسط، لأن واحد على المصطلح m للخسائر الفردية. لذا، يتضح أن المشتقة، فيما يتعلق بـ w_1 من دالة
التكلفة الإجمالية سيكون أيضًا متوسط المشتقات فيما يتعلق بـ w_1 من
مصطلحات الخسارة الفردية. ولكننا أوضحنا مسبقًا كيفية حساب هذا
المصطلح من خلال dw_1_i، حيث نوضح، في الشريحة السابقة، كيفية حساب ذلك في مثال تدريبي واحد. لذا، ما تحتاجون إلى فعله هو حساب هذه المشتقات كما عرضنا في المثال
التدريبي السابق وحساب متوسطها، وهذا سيمنحكم التدرج الإجمالي الذي يمكنكم استخدامه
لتنفيذ الانحدار التدريجي. حسنًا، أعلم أنه كانت هناك الكثير من التفاصيل، ولكن دعونا نأخذ كل هذا ونلخص هذا إلى خوارزمية ملموسة حتى يحين
الوقت الذي ينبغي عليكم خلاله تنفيذ الانحدار اللوجستي من
خلال انحدار تدريجي عامل. إذًا، هذا ما يمكنكم فعله: دعونا
نبدأ من خلال j يساوي صفرًا، dw_1 يساوي صفرًا، dw_2
يساوي صفرًا، d_b يساوي صفرًا. ما سنقوم به هو استخدام حلقة
for على مدار المجموعة التدريبية، وحساب المشتقة مع مراعاة كل مثال
تدريبي ثم إضافتها. حسنًا، فيما يلي كيف نقوم بذلك، لـ i
يساوي واحدًا من خلال m، حيث m هو عدد الأمثلة التدريبية، ونحسب z_i يساوي w منقول x_i زائد b. التنبؤ a_i يساوي سيجما z_i، ثم نقوم بإضافة J، +J يساوي y_i log a_i زائد
واحد ناقص y_i log واحد ناقص a_i، ثم نضع علامة السالب أمام القوس بأكمله، وبعد ذلك كما رأينا سابقًا، لدينا dz_i التي تساوي a_i ناقص y_i، وd_w += x1_i dz_i، dw_2 += xi_2 dz_i، وأقوم بإجراء هذا الحساب مفترضًا
أن لديكم خاصيتين فقط، حيث n = 2 وإلا، تقومون بذلك من أجل dw_1، وdw_2 وdw_3 وما إلى ذلك، وبعد ذلك db += dz_i، وأعتقد أن هذه نهاية حلقة for. وأخيرًا، من خلال القيام بذلك
لجميع الأمثلة التدريبية m، ستكونون بحاجة إلى القسمة
على m لأننا نحسب المتوسطات. إذًا، dw_1 /= m، dw_2 /= m، db /= m، لحساب المتوسطات. حسنًا، من خلال كل هذه الحسابات، فإنكم لم تحسبوا إلا مشتقات
دالة التكلفة J مع مراعاة كل المعلمات لديكم w_1 وw_2 وb. لنتعرف على بعض التفاصيل المتعلقة بما نفعله، نحن نستخدم dw_1 وdw_2 وdb
كبيانات تراكمية، لذا فبعد هذا الحساب، يكون dw_1 مساويًا لمشتقة دالة التكلفة الإجمالية مع مراعاة
w_1 وبالمثل لـ dw_2 وdb. لذا، لاحظوا أن dw_1 وdw_2 لا
يحتويان على حرف i مرتفع، لأننا نستخدمهما في هذه التعليمات البرمجية كبيانات تراكمية لجمع مجموعة التدريب كاملة. بينما على عكس ذلك، dz_i هنا، كانت هذه dz فيما يتعلق بمثال تدريب واحد. ولهذا كانت تحتوي على حرف i مرتفع
للإشارة إلى المثال التدريبي الواحد، i الذي تتم معالجته آليًا. لذلك عند إتمام كل الحسابات لتنفيذ خطوة واحدة من الانحدار التدريجي، فإنكم ستنفذون w_1، والتي سيتم تحديثها إلى w_1 ناقص
معدل التعلم مضروبًا في dw_1، w_2، مع إنهاء هذا من خلال w_2 ناقص
معدل التعلم مضروبًا في dw_2، وسيتم تحديث b إلى b ناقص معدل
التعلم مضروبًا في db، حيث كانت dw_1 وdw_2 وdb كما تمت حسابها. أخيرًا، سيكون J بمثابة قيمة صحيحة لدالة التكلفة. لذا، فإن كل شيء على الشريحة ينفذ
فقط خطوة واحدة للانحدار التدريجي، وبالتالي يكون عليكم تكرار
كل شيء على هذه الشريحة مرات عديدة لأخذ خطوات عديدة للانحدار التدريجي. في حال بدت هذه التفاصيل معقدة للغاية، مرة أخرى، لا تقلقوا كثيرًا بشأن ذلك حاليًا، على أمل أن يكون كل ذلك أوضح عندما تذهبون وتنفذون ذلك في واجبات البرمجة. ولكن تبين أن هناك نقطتي ضعف فيما يتعلق بالحساب وفقًا لطريقة تنفيذها هنا، وهو أنه لتنفيذ الانحدار اللوجستي بهذه الطريقة، يجب عليكم كتابة اثنتين من حلقات for. وتكون أول حلقة for هي
حلقة for على الأمثلة التدريبية m، وثاني حلقة for هي حلقة
for على جميع الخصائص هنا. لذا، في هذا المثال، لدينا خاصيتان، حيث يكون n يساوي 2 وx يساوي 2، ولكن ربما يكون لدينا المزيد من الخصائص، وينتهي بكم المطاف وأنتم تكتبون dw_1، dw_2، والحسابات المشابهة لـ dw_t، وهكذا delta dw_n. وبالتالي، يبدو أنكم تحتاجون إلى وجود
حلقة for على الخصائص على n من الخصائص. وعندما تقومون بتطبيق خوارزميات التعلم العميق، فإنكم تجدون أن وجود حلقات for واضحة في تعليماتكم البرمجية يجعل
الخوارزمية تعمل بكفاءة أقل. إذًا، في عصر التعلم العميق، فإننا سننتقل إلى مجموعات بيانات أكبر وأكبر، ولذلك فإن التمكّن من تنفيذ الخوارزميات
بدون استخدام حلقات for واضحة هو أمر مهم حقًا وسوف يساعدكم في
مواءمة مجموعات بيانات أكبر. وقد تبين أن هناك مجموعة من التقنيات تُعرف
باسم تقنيات التحويل إلى متجهات والتي تتيح لكم التخلص من حلقات for الواضحة هذه في تعليماتكم البرمجية. أعتقد أنه قبل عصر التعلم العميق، أي قبل ظهور التعلم العميق، كان من الجيد توفر إمكانية التحويل إلى متجهات، وبالتالي كان بإمكانكم القيام بذلك أحيانًا لتسريع
تعليماتكم البرمجية وأحيانًا لم يكن بإمكانكم ذلك. ولكن في عصر التعلم العميق، فإن التحويل إلى متجهات، والذي ينطوي على التخلص من حلقات for، مثل هذه، ومثل هذه، قد أصبح مهمًا حقًا، لأننا أصبحنا نتدرب بصورة متزايدة
على مجموعات البيانات الكبيرة، وبالتالي تحتاجون أن تكون تعليماتكم
البرمجية متمتعة بكفاءة عالية. لذا، في مقاطع الفيديو القادمة القليلة، سنتحدث حول التحويل إلى متجهات وكيفية تنفيذ كل ذلك بدون استخدام حلقة for واحدة. لذا فإنني آمل بهذا أن تكون لديكم فكرة عن كيفية تطبيق الانحدار اللوجستي أو الانحدار
التدريجي للانحدار اللوجستي. وستكون الأمر أوضح عند تنفيذ تمرين البرمجة. ولكن قبل القيام بتمرين البرمجة فعليًا، دعونا نتحدث أولاً عن التحويل إلى
متجهات حتى يمكنكم تنفيذ كل هذا الأمر، وهو تنفيذ تكرار واحد للانحدار التدريجي دون
الحاجة لاستخدام أي من حلقات for.