1
00:00:00,000 --> 00:00:02,070
用所有你学到的东西

2
00:00:02,070 --> 00:00:04,745
你已经可以准备开始攻克第一个编程作业了

3
00:00:04,745 --> 00:00:10,130
在那之前，我先为你快速介绍一下Coursera中的iPython notebook

4
00:00:10,130 --> 00:00:14,545
这就是你在Coursera上用到的Jupyter iPython notebooks

5
00:00:14,545 --> 00:00:17,520
我先为你简短展示它的一些功能

6
00:00:17,520 --> 00:00:21,885
操作说明写在iPython notebook的文本里

7
00:00:21,885 --> 00:00:25,460
这些长的浅灰色块是代码块

8
00:00:25,460 --> 00:00:27,030
有时候，你能在这些区域里看到

9
00:00:27,030 --> 00:00:29,255
有些写着“起始代码“和“末尾代码“

10
00:00:29,255 --> 00:00:31,860
做编程练习的时候，请确保

11
00:00:31,860 --> 00:00:36,755
把你的代码写在“起始代码“和“末尾代码“之间

12
00:00:36,755 --> 00:00:41,485
比如说，打印"Hello World"

13
00:00:41,485 --> 00:00:44,085
然后，去执行这个代码块，

14
00:00:44,085 --> 00:00:49,355
你可以按 Shift+Enter 来执行这个代码块，

15
00:00:49,355 --> 00:00:51,265
也就是，我们刚才写的print "Hello World"

16
00:00:51,265 --> 00:00:53,355
于是，这就打印出了"Hello World"

17
00:00:53,355 --> 00:00:55,140
运行一个Cell（单元格）

18
00:00:55,140 --> 00:00:56,940
你可以在单元格中运行其中的一个代码块，

19
00:00:56,940 --> 00:01:01,200
你也可以点这个"Cell"，然后点"run cells"，去执行这个（程序）

20
00:01:01,200 --> 00:01:05,275
在你的电脑上，有可能

21
00:01:05,275 --> 00:01:07,364
Cell -> Run cells 的快捷键，

22
00:01:07,364 --> 00:01:09,105
可能不是shift+enter

23
00:01:09,105 --> 00:01:14,070
但是在我的Mac和PC上，都是shift+enter

24
00:01:14,070 --> 00:01:16,550
所以可能你的也一样

25
00:01:16,550 --> 00:01:18,480
当你阅读操作说明时,

26
00:01:18,480 --> 00:01:20,960
如果你不小心双击它,

27
00:01:20,960 --> 00:01:24,270
你可能会得到这个markdown语言

28
00:01:24,270 --> 00:01:26,700
如果你得到了这个看起来有点滑稽的文本

29
00:01:26,700 --> 00:01:30,390
要将其转换回美观的文本, 只需运行这个单元格。

30
00:01:30,390 --> 00:01:34,740
所以，你可以点Cell再点Run Cell，或者，我会按Shift+Enter

31
00:01:34,740 --> 00:01:39,630
这样就会执行这些Markdown代码，再把它换回看起来美观的文本

32
00:01:39,630 --> 00:01:41,565
还有一些小技巧

33
00:01:41,565 --> 00:01:43,795
你所运行的像这样的代码

34
00:01:43,795 --> 00:01:48,333
实际上它运行在一个内核上,

35
00:01:48,333 --> 00:01:51,947
（运行）在服务器里运行的一段代码上。

36
00:01:51,947 --> 00:01:54,900
如果你正在运行的工作计算量过大，或者如果

37
00:01:54,900 --> 00:01:59,121
或者你离开电脑非常长时间 或者发生什么意外

38
00:01:59,121 --> 00:02:00,505
你的网络连接之类的

39
00:02:00,505 --> 00:02:03,160
会有小概率导致这些在后台运行的内核被终止

40
00:02:03,160 --> 00:02:06,690
在这种情况下, 只需点击“Kernel“，然后点击“Restart Kernel“

41
00:02:06,690 --> 00:02:10,415
顺利的话，这会重启内核，然后能正常使用。

42
00:02:10,415 --> 00:02:13,080
但是这种情况不太应该发生在

43
00:02:13,080 --> 00:02:16,858
你所运行的计算任务很小，或者你的notebook才刚启动的情况下

44
00:02:16,858 --> 00:02:19,995
如果你看到报错消息说Kernel终止了之类的

45
00:02:19,995 --> 00:02:21,310
你可以尝试点击"Kernel-->Restart"

46
00:02:21,310 --> 00:02:25,362
最后，在iPython notebook里

47
00:02:25,362 --> 00:02:27,845
像这样，可能会有多个代码块

48
00:02:27,845 --> 00:02:33,255
所以，即使一个之前的代码块中没有任何输出，

49
00:02:33,255 --> 00:02:35,550
请确保执行此代码块，因为，

50
00:02:35,550 --> 00:02:39,698
比如在这个例子里, 它将 numpy 导入为 np 等等，

51
00:02:39,698 --> 00:02:42,360
并设置一些您可能需要的变量, 以便

52
00:02:42,360 --> 00:02:45,570
执行后面的代码块。

53
00:02:45,570 --> 00:02:50,845
因此，请务必执行上面的那些，即使不需要在里面写任何代码。

54
00:02:50,845 --> 00:02:53,705
最后，当你完成了编码

55
00:02:53,705 --> 00:02:57,920
在右上角，有这个蓝色的提交作业按钮, 我们

56
00:02:57,920 --> 00:03:02,130
单击该按钮，来提交你的答案用来评分。

57
00:03:02,130 --> 00:03:05,520
我发现iPython Notebooks的这些交互命令

58
00:03:05,520 --> 00:03:09,008
对于快速学习是很重要的，

59
00:03:09,008 --> 00:03:10,520
执行几行代码，

60
00:03:10,520 --> 00:03:13,450
看到一个结果，学习和进步很快。

61
00:03:13,450 --> 00:03:17,430
所以我希望，在Coursera的编程作业中的，

62
00:03:17,430 --> 00:03:20,775
Jupyter iPython notebook能帮助你快速学习

63
00:03:20,775 --> 00:03:24,535
和实践，以及学会如何实现这些算法。

64
00:03:24,535 --> 00:03:26,325
在这之后还有一个视频

65
00:03:26,325 --> 00:03:28,695
这是一个非强制观看的视频，讨论了一些

66
00:03:28,695 --> 00:03:32,210
逻辑回归(logistic regression)的成本函数(cost function)。你可以看，也可以不看。

67
00:03:32,210 --> 00:03:33,745
无论那种方式都可以。

68
00:03:33,745 --> 00:03:38,140
但无论哪种方式，祝愿你在第二周的作业中有好运

69
00:03:38,140 --> 00:03:42,720
我也期待在第三周的课程开始时见到你